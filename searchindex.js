Search.setIndex({"alltitles": {"Acknowledgments": [[128, "acknowledgments"]], "Advanced Topics": [[130, "advanced-topics"]], "Basic Setup": [[130, "basic-setup"]], "Batched Execution": [[131, "batched-execution"]], "CSV Batch Config": [[131, "csv-batch-config"]], "Contributing Process": [[126, "contributing-process"], [127, "contributing-process"]], "Contributing to GAPs": [[126, null], [127, null]], "Custom Parametric": [[131, "custom-parametric"]], "Development environment guidelines": [[126, "development-environment-guidelines"], [127, "development-environment-guidelines"]], "Documentation": [[126, "documentation"], [127, "documentation"]], "Duplicate Pipeline Steps": [[131, "duplicate-pipeline-steps"]], "Error Handling": [[126, "error-handling"], [127, "error-handling"]], "Examples": [[129, null]], "Execution": [[131, "execution"]], "GAPs documentation": [[128, null]], "Getting Started": [[131, "getting-started"]], "Handling ImportErrors": [[132, "handling-importerrors"]], "Hidden Parameters": [[130, "hidden-parameters"]], "How to Run a Model Powered by GAPs": [[131, null]], "How to use GAPs": [[130, null]], "Imports": [[126, "imports"], [127, "imports"]], "Installation": [[132, null]], "Installing from PyPI": [[132, "installing-from-pypi"]], "Installing from source": [[132, "installing-from-source"]], "Installing the development version of GAPs": [[132, "installing-the-development-version-of-gaps"]], "Integrating GAPs with your python package": [[130, "integrating-gaps-with-your-python-package"]], "Intro": [[130, "intro"]], "Known Limitations": [[131, "known-limitations"]], "Logging": [[130, "logging"]], "Miscellaneous": [[126, "miscellaneous"], [127, "miscellaneous"]], "Monitoring": [[131, "monitoring"]], "Multiple Commands": [[130, "multiple-commands"]], "Multiprocessing": [[130, "multiprocessing"]], "Overview": [[126, "overview"], [127, "overview"]], "Pre-processors": [[130, "pre-processors"]], "Questions?": [[130, "questions"], [131, "questions"]], "Reference": [[100, "reference"]], "Ruff": [[126, "ruff"], [127, "ruff"]], "Scripts": [[131, "scripts"]], "Split Keys": [[130, "split-keys"]], "Standard Parametric": [[131, "standard-parametric"]], "Status Reset": [[131, "status-reset"]], "Stylistic guidelines": [[126, "stylistic-guidelines"], [127, "stylistic-guidelines"]], "Test File Structure": [[126, "test-file-structure"], [127, "test-file-structure"]], "Test coverage": [[126, "test-coverage"], [127, "test-coverage"]], "The Basics": [[131, "the-basics"]], "The General Idea": [[131, "the-general-idea"]], "What is GAPs?": [[128, "what-is-gaps"]], "Who should use GAPs": [[128, "who-should-use-gaps"]], "gaps": [[0, null]], "gaps.batch": [[1, null]], "gaps.batch.BatchJob": [[2, null]], "gaps.batch.BatchSet": [[3, null]], "gaps.cli": [[4, null]], "gaps.cli.batch": [[5, null]], "gaps.cli.batch.batch_command": [[6, null]], "gaps.cli.cli": [[7, null]], "gaps.cli.cli.as_click_command": [[8, null]], "gaps.cli.cli.make_cli": [[9, null]], "gaps.cli.collect": [[10, null]], "gaps.cli.collect.collect": [[11, null]], "gaps.cli.command": [[12, null]], "gaps.cli.command.AbstractBaseCLICommandConfiguration": [[13, null]], "gaps.cli.command.CLICommandConfiguration": [[14, null]], "gaps.cli.command.CLICommandFromClass": [[15, null]], "gaps.cli.command.CLICommandFromFunction": [[16, null]], "gaps.cli.config": [[17, null]], "gaps.cli.config.as_script_str": [[18, null]], "gaps.cli.config.from_config": [[19, null]], "gaps.cli.config.node_kwargs": [[20, null]], "gaps.cli.config.run_with_status_updates": [[21, null]], "gaps.cli.documentation": [[22, null]], "gaps.cli.documentation.CommandDocumentation": [[23, null]], "gaps.cli.execution": [[24, null]], "gaps.cli.execution.kickoff_job": [[25, null]], "gaps.cli.pipeline": [[26, null]], "gaps.cli.pipeline.pipeline": [[27, null]], "gaps.cli.pipeline.pipeline_command": [[28, null]], "gaps.cli.pipeline.template_pipeline_config": [[29, null]], "gaps.cli.preprocessing": [[30, null]], "gaps.cli.preprocessing.preprocess_collect_config": [[31, null]], "gaps.cli.preprocessing.preprocess_script_config": [[32, null]], "gaps.cli.preprocessing.split_project_points_into_ranges": [[33, null]], "gaps.cli.reset": [[34, null]], "gaps.cli.reset.reset_command": [[35, null]], "gaps.cli.script": [[36, null]], "gaps.cli.script.script": [[37, null]], "gaps.cli.status": [[38, null]], "gaps.cli.status.main_monitor": [[39, null]], "gaps.cli.status.status_command": [[40, null]], "gaps.cli.templates": [[41, null]], "gaps.cli.templates.template_command": [[42, null]], "gaps.collection": [[43, null]], "gaps.collection.Collector": [[44, null]], "gaps.collection.DatasetCollector": [[45, null]], "gaps.collection.find_h5_files": [[46, null]], "gaps.collection.parse_gids_from_files": [[47, null]], "gaps.collection.parse_meta": [[48, null]], "gaps.collection.parse_project_points": [[49, null]], "gaps.config": [[50, null]], "gaps.config.ConfigType": [[51, null]], "gaps.config.Handler": [[52, null]], "gaps.config.JSON5Handler": [[53, null]], "gaps.config.JSONHandler": [[54, null]], "gaps.config.TOMLHandler": [[55, null]], "gaps.config.YAMLHandler": [[56, null]], "gaps.config.config_as_str_for_docstring": [[57, null]], "gaps.config.init_logging_from_config_file": [[58, null]], "gaps.config.load_config": [[59, null]], "gaps.config.resolve_all_paths": [[60, null]], "gaps.exceptions": [[61, null]], "gaps.exceptions.gapsConfigError": [[62, null]], "gaps.exceptions.gapsError": [[63, null]], "gaps.exceptions.gapsExecutionError": [[64, null]], "gaps.exceptions.gapsFileNotFoundError": [[65, null]], "gaps.exceptions.gapsHPCError": [[66, null]], "gaps.exceptions.gapsIOError": [[67, null]], "gaps.exceptions.gapsIndexError": [[68, null]], "gaps.exceptions.gapsKeyError": [[69, null]], "gaps.exceptions.gapsRuntimeError": [[70, null]], "gaps.exceptions.gapsTypeError": [[71, null]], "gaps.exceptions.gapsValueError": [[72, null]], "gaps.hpc": [[73, null]], "gaps.hpc.COMMANDS": [[74, null]], "gaps.hpc.DEFAULT_STDOUT_PATH": [[75, null]], "gaps.hpc.HpcJobManager": [[76, null]], "gaps.hpc.PBS": [[77, null]], "gaps.hpc.Q_COLUMNS": [[78, null]], "gaps.hpc.SLURM": [[79, null]], "gaps.hpc.format_env": [[80, null]], "gaps.hpc.format_walltime": [[81, null]], "gaps.hpc.make_sh": [[82, null]], "gaps.hpc.submit": [[83, null]], "gaps.legacy": [[84, null]], "gaps.legacy.BatchJob": [[85, null]], "gaps.legacy.HardwareStatusRetriever": [[86, null]], "gaps.legacy.Pipeline": [[87, null]], "gaps.legacy.PipelineError": [[88, null]], "gaps.legacy.Status": [[89, null]], "gaps.log": [[90, null]], "gaps.log.FORMAT": [[91, null]], "gaps.log.add_handlers": [[92, null]], "gaps.log.init_logger": [[93, null]], "gaps.log.log_mem": [[94, null]], "gaps.log.log_versions": [[95, null]], "gaps.log.make_handler": [[96, null]], "gaps.log.make_log_file_handler": [[97, null]], "gaps.log.make_log_stream_handler": [[98, null]], "gaps.log.print_logging_info": [[99, null]], "gaps.log.print_logging_info_all_libraries": [[100, null]], "gaps.pipeline": [[101, null]], "gaps.pipeline.Pipeline": [[102, null]], "gaps.pipeline.PipelineStep": [[103, null]], "gaps.pipeline.parse_previous_status": [[104, null]], "gaps.project_points": [[105, null]], "gaps.project_points.ProjectPoints": [[106, null]], "gaps.status": [[107, null]], "gaps.status.HardwareOption": [[108, null]], "gaps.status.HardwareStatusRetriever": [[109, null]], "gaps.status.QOSOption": [[110, null]], "gaps.status.Status": [[111, null]], "gaps.status.StatusField": [[112, null]], "gaps.status.StatusOption": [[113, null]], "gaps.status.StatusUpdates": [[114, null]], "gaps.utilities": [[115, null]], "gaps.utilities.CaseInsensitiveEnum": [[116, null]], "gaps.utilities.project_points_from_container_or_slice": [[117, null]], "gaps.utilities.recursively_update_dict": [[118, null]], "gaps.utilities.resolve_path": [[119, null]], "gaps.warn": [[120, null]], "gaps.warn.gapsCollectionWarning": [[121, null]], "gaps.warn.gapsDeprecationWarning": [[122, null]], "gaps.warn.gapsHPCWarning": [[123, null]], "gaps.warn.gapsWarning": [[124, null]]}, "docnames": ["_autosummary/gaps", "_autosummary/gaps.batch", "_autosummary/gaps.batch.BatchJob", "_autosummary/gaps.batch.BatchSet", "_autosummary/gaps.cli", "_autosummary/gaps.cli.batch", "_autosummary/gaps.cli.batch.batch_command", "_autosummary/gaps.cli.cli", "_autosummary/gaps.cli.cli.as_click_command", "_autosummary/gaps.cli.cli.make_cli", "_autosummary/gaps.cli.collect", "_autosummary/gaps.cli.collect.collect", "_autosummary/gaps.cli.command", "_autosummary/gaps.cli.command.AbstractBaseCLICommandConfiguration", "_autosummary/gaps.cli.command.CLICommandConfiguration", "_autosummary/gaps.cli.command.CLICommandFromClass", "_autosummary/gaps.cli.command.CLICommandFromFunction", "_autosummary/gaps.cli.config", "_autosummary/gaps.cli.config.as_script_str", "_autosummary/gaps.cli.config.from_config", "_autosummary/gaps.cli.config.node_kwargs", "_autosummary/gaps.cli.config.run_with_status_updates", "_autosummary/gaps.cli.documentation", "_autosummary/gaps.cli.documentation.CommandDocumentation", "_autosummary/gaps.cli.execution", "_autosummary/gaps.cli.execution.kickoff_job", "_autosummary/gaps.cli.pipeline", "_autosummary/gaps.cli.pipeline.pipeline", "_autosummary/gaps.cli.pipeline.pipeline_command", "_autosummary/gaps.cli.pipeline.template_pipeline_config", "_autosummary/gaps.cli.preprocessing", "_autosummary/gaps.cli.preprocessing.preprocess_collect_config", "_autosummary/gaps.cli.preprocessing.preprocess_script_config", "_autosummary/gaps.cli.preprocessing.split_project_points_into_ranges", "_autosummary/gaps.cli.reset", "_autosummary/gaps.cli.reset.reset_command", "_autosummary/gaps.cli.script", "_autosummary/gaps.cli.script.script", "_autosummary/gaps.cli.status", "_autosummary/gaps.cli.status.main_monitor", "_autosummary/gaps.cli.status.status_command", "_autosummary/gaps.cli.templates", "_autosummary/gaps.cli.templates.template_command", "_autosummary/gaps.collection", "_autosummary/gaps.collection.Collector", "_autosummary/gaps.collection.DatasetCollector", "_autosummary/gaps.collection.find_h5_files", "_autosummary/gaps.collection.parse_gids_from_files", "_autosummary/gaps.collection.parse_meta", "_autosummary/gaps.collection.parse_project_points", "_autosummary/gaps.config", "_autosummary/gaps.config.ConfigType", "_autosummary/gaps.config.Handler", "_autosummary/gaps.config.JSON5Handler", "_autosummary/gaps.config.JSONHandler", "_autosummary/gaps.config.TOMLHandler", "_autosummary/gaps.config.YAMLHandler", "_autosummary/gaps.config.config_as_str_for_docstring", "_autosummary/gaps.config.init_logging_from_config_file", "_autosummary/gaps.config.load_config", "_autosummary/gaps.config.resolve_all_paths", "_autosummary/gaps.exceptions", "_autosummary/gaps.exceptions.gapsConfigError", "_autosummary/gaps.exceptions.gapsError", "_autosummary/gaps.exceptions.gapsExecutionError", "_autosummary/gaps.exceptions.gapsFileNotFoundError", "_autosummary/gaps.exceptions.gapsHPCError", "_autosummary/gaps.exceptions.gapsIOError", "_autosummary/gaps.exceptions.gapsIndexError", "_autosummary/gaps.exceptions.gapsKeyError", "_autosummary/gaps.exceptions.gapsRuntimeError", "_autosummary/gaps.exceptions.gapsTypeError", "_autosummary/gaps.exceptions.gapsValueError", "_autosummary/gaps.hpc", "_autosummary/gaps.hpc.COMMANDS", "_autosummary/gaps.hpc.DEFAULT_STDOUT_PATH", "_autosummary/gaps.hpc.HpcJobManager", "_autosummary/gaps.hpc.PBS", "_autosummary/gaps.hpc.Q_COLUMNS", "_autosummary/gaps.hpc.SLURM", "_autosummary/gaps.hpc.format_env", "_autosummary/gaps.hpc.format_walltime", "_autosummary/gaps.hpc.make_sh", "_autosummary/gaps.hpc.submit", "_autosummary/gaps.legacy", "_autosummary/gaps.legacy.BatchJob", "_autosummary/gaps.legacy.HardwareStatusRetriever", "_autosummary/gaps.legacy.Pipeline", "_autosummary/gaps.legacy.PipelineError", "_autosummary/gaps.legacy.Status", "_autosummary/gaps.log", "_autosummary/gaps.log.FORMAT", "_autosummary/gaps.log.add_handlers", "_autosummary/gaps.log.init_logger", "_autosummary/gaps.log.log_mem", "_autosummary/gaps.log.log_versions", "_autosummary/gaps.log.make_handler", "_autosummary/gaps.log.make_log_file_handler", "_autosummary/gaps.log.make_log_stream_handler", "_autosummary/gaps.log.print_logging_info", "_autosummary/gaps.log.print_logging_info_all_libraries", "_autosummary/gaps.pipeline", "_autosummary/gaps.pipeline.Pipeline", "_autosummary/gaps.pipeline.PipelineStep", "_autosummary/gaps.pipeline.parse_previous_status", "_autosummary/gaps.project_points", "_autosummary/gaps.project_points.ProjectPoints", "_autosummary/gaps.status", "_autosummary/gaps.status.HardwareOption", "_autosummary/gaps.status.HardwareStatusRetriever", "_autosummary/gaps.status.QOSOption", "_autosummary/gaps.status.Status", "_autosummary/gaps.status.StatusField", "_autosummary/gaps.status.StatusOption", "_autosummary/gaps.status.StatusUpdates", "_autosummary/gaps.utilities", "_autosummary/gaps.utilities.CaseInsensitiveEnum", "_autosummary/gaps.utilities.project_points_from_container_or_slice", "_autosummary/gaps.utilities.recursively_update_dict", "_autosummary/gaps.utilities.resolve_path", "_autosummary/gaps.warn", "_autosummary/gaps.warn.gapsCollectionWarning", "_autosummary/gaps.warn.gapsDeprecationWarning", "_autosummary/gaps.warn.gapsHPCWarning", "_autosummary/gaps.warn.gapsWarning", "api", "dev/README", "dev/index", "index", "misc/examples", "misc/examples.developers", "misc/examples.users", "misc/installation"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["_autosummary/gaps.rst", "_autosummary/gaps.batch.rst", "_autosummary/gaps.batch.BatchJob.rst", "_autosummary/gaps.batch.BatchSet.rst", "_autosummary/gaps.cli.rst", "_autosummary/gaps.cli.batch.rst", "_autosummary/gaps.cli.batch.batch_command.rst", "_autosummary/gaps.cli.cli.rst", "_autosummary/gaps.cli.cli.as_click_command.rst", "_autosummary/gaps.cli.cli.make_cli.rst", "_autosummary/gaps.cli.collect.rst", "_autosummary/gaps.cli.collect.collect.rst", "_autosummary/gaps.cli.command.rst", "_autosummary/gaps.cli.command.AbstractBaseCLICommandConfiguration.rst", "_autosummary/gaps.cli.command.CLICommandConfiguration.rst", "_autosummary/gaps.cli.command.CLICommandFromClass.rst", "_autosummary/gaps.cli.command.CLICommandFromFunction.rst", "_autosummary/gaps.cli.config.rst", "_autosummary/gaps.cli.config.as_script_str.rst", "_autosummary/gaps.cli.config.from_config.rst", "_autosummary/gaps.cli.config.node_kwargs.rst", "_autosummary/gaps.cli.config.run_with_status_updates.rst", "_autosummary/gaps.cli.documentation.rst", "_autosummary/gaps.cli.documentation.CommandDocumentation.rst", "_autosummary/gaps.cli.execution.rst", "_autosummary/gaps.cli.execution.kickoff_job.rst", "_autosummary/gaps.cli.pipeline.rst", "_autosummary/gaps.cli.pipeline.pipeline.rst", "_autosummary/gaps.cli.pipeline.pipeline_command.rst", "_autosummary/gaps.cli.pipeline.template_pipeline_config.rst", "_autosummary/gaps.cli.preprocessing.rst", "_autosummary/gaps.cli.preprocessing.preprocess_collect_config.rst", "_autosummary/gaps.cli.preprocessing.preprocess_script_config.rst", "_autosummary/gaps.cli.preprocessing.split_project_points_into_ranges.rst", "_autosummary/gaps.cli.reset.rst", "_autosummary/gaps.cli.reset.reset_command.rst", "_autosummary/gaps.cli.script.rst", "_autosummary/gaps.cli.script.script.rst", "_autosummary/gaps.cli.status.rst", "_autosummary/gaps.cli.status.main_monitor.rst", "_autosummary/gaps.cli.status.status_command.rst", "_autosummary/gaps.cli.templates.rst", "_autosummary/gaps.cli.templates.template_command.rst", "_autosummary/gaps.collection.rst", "_autosummary/gaps.collection.Collector.rst", "_autosummary/gaps.collection.DatasetCollector.rst", "_autosummary/gaps.collection.find_h5_files.rst", "_autosummary/gaps.collection.parse_gids_from_files.rst", "_autosummary/gaps.collection.parse_meta.rst", "_autosummary/gaps.collection.parse_project_points.rst", "_autosummary/gaps.config.rst", "_autosummary/gaps.config.ConfigType.rst", "_autosummary/gaps.config.Handler.rst", "_autosummary/gaps.config.JSON5Handler.rst", "_autosummary/gaps.config.JSONHandler.rst", "_autosummary/gaps.config.TOMLHandler.rst", "_autosummary/gaps.config.YAMLHandler.rst", "_autosummary/gaps.config.config_as_str_for_docstring.rst", "_autosummary/gaps.config.init_logging_from_config_file.rst", "_autosummary/gaps.config.load_config.rst", "_autosummary/gaps.config.resolve_all_paths.rst", "_autosummary/gaps.exceptions.rst", "_autosummary/gaps.exceptions.gapsConfigError.rst", "_autosummary/gaps.exceptions.gapsError.rst", "_autosummary/gaps.exceptions.gapsExecutionError.rst", "_autosummary/gaps.exceptions.gapsFileNotFoundError.rst", "_autosummary/gaps.exceptions.gapsHPCError.rst", "_autosummary/gaps.exceptions.gapsIOError.rst", "_autosummary/gaps.exceptions.gapsIndexError.rst", "_autosummary/gaps.exceptions.gapsKeyError.rst", "_autosummary/gaps.exceptions.gapsRuntimeError.rst", "_autosummary/gaps.exceptions.gapsTypeError.rst", "_autosummary/gaps.exceptions.gapsValueError.rst", "_autosummary/gaps.hpc.rst", "_autosummary/gaps.hpc.COMMANDS.rst", "_autosummary/gaps.hpc.DEFAULT_STDOUT_PATH.rst", "_autosummary/gaps.hpc.HpcJobManager.rst", "_autosummary/gaps.hpc.PBS.rst", "_autosummary/gaps.hpc.Q_COLUMNS.rst", "_autosummary/gaps.hpc.SLURM.rst", "_autosummary/gaps.hpc.format_env.rst", "_autosummary/gaps.hpc.format_walltime.rst", "_autosummary/gaps.hpc.make_sh.rst", "_autosummary/gaps.hpc.submit.rst", "_autosummary/gaps.legacy.rst", "_autosummary/gaps.legacy.BatchJob.rst", "_autosummary/gaps.legacy.HardwareStatusRetriever.rst", "_autosummary/gaps.legacy.Pipeline.rst", "_autosummary/gaps.legacy.PipelineError.rst", "_autosummary/gaps.legacy.Status.rst", "_autosummary/gaps.log.rst", "_autosummary/gaps.log.FORMAT.rst", "_autosummary/gaps.log.add_handlers.rst", "_autosummary/gaps.log.init_logger.rst", "_autosummary/gaps.log.log_mem.rst", "_autosummary/gaps.log.log_versions.rst", "_autosummary/gaps.log.make_handler.rst", "_autosummary/gaps.log.make_log_file_handler.rst", "_autosummary/gaps.log.make_log_stream_handler.rst", "_autosummary/gaps.log.print_logging_info.rst", "_autosummary/gaps.log.print_logging_info_all_libraries.rst", "_autosummary/gaps.pipeline.rst", "_autosummary/gaps.pipeline.Pipeline.rst", "_autosummary/gaps.pipeline.PipelineStep.rst", "_autosummary/gaps.pipeline.parse_previous_status.rst", "_autosummary/gaps.project_points.rst", "_autosummary/gaps.project_points.ProjectPoints.rst", "_autosummary/gaps.status.rst", "_autosummary/gaps.status.HardwareOption.rst", "_autosummary/gaps.status.HardwareStatusRetriever.rst", "_autosummary/gaps.status.QOSOption.rst", "_autosummary/gaps.status.Status.rst", "_autosummary/gaps.status.StatusField.rst", "_autosummary/gaps.status.StatusOption.rst", "_autosummary/gaps.status.StatusUpdates.rst", "_autosummary/gaps.utilities.rst", "_autosummary/gaps.utilities.CaseInsensitiveEnum.rst", "_autosummary/gaps.utilities.project_points_from_container_or_slice.rst", "_autosummary/gaps.utilities.recursively_update_dict.rst", "_autosummary/gaps.utilities.resolve_path.rst", "_autosummary/gaps.warn.rst", "_autosummary/gaps.warn.gapsCollectionWarning.rst", "_autosummary/gaps.warn.gapsDeprecationWarning.rst", "_autosummary/gaps.warn.gapsHPCWarning.rst", "_autosummary/gaps.warn.gapsWarning.rst", "api.rst", "dev/README.rst", "dev/index.rst", "index.rst", "misc/examples.rst", "misc/examples.developers.rst", "misc/examples.users.rst", "misc/installation.rst"], "indexentries": {"__add__() (batchset method)": [[3, "gaps.batch.BatchSet.__add__", false]], "__add__() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.__add__", false]], "__add__() (commands method)": [[74, "gaps.hpc.COMMANDS.__add__", false]], "__add__() (configtype method)": [[51, "gaps.config.ConfigType.__add__", false]], "__add__() (hardwareoption method)": [[108, "gaps.status.HardwareOption.__add__", false]], "__add__() (q_columns method)": [[78, "gaps.hpc.Q_COLUMNS.__add__", false]], "__add__() (qosoption method)": [[110, "gaps.status.QOSOption.__add__", false]], "__add__() (statusfield method)": [[112, "gaps.status.StatusField.__add__", false]], "__add__() (statusoption method)": [[113, "gaps.status.StatusOption.__add__", false]], "__mul__() (batchset method)": [[3, "gaps.batch.BatchSet.__mul__", false]], "__mul__() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.__mul__", false]], "__mul__() (commands method)": [[74, "gaps.hpc.COMMANDS.__mul__", false]], "__mul__() (configtype method)": [[51, "gaps.config.ConfigType.__mul__", false]], "__mul__() (hardwareoption method)": [[108, "gaps.status.HardwareOption.__mul__", false]], "__mul__() (q_columns method)": [[78, "gaps.hpc.Q_COLUMNS.__mul__", false]], "__mul__() (qosoption method)": [[110, "gaps.status.QOSOption.__mul__", false]], "__mul__() (statusfield method)": [[112, "gaps.status.StatusField.__mul__", false]], "__mul__() (statusoption method)": [[113, "gaps.status.StatusOption.__mul__", false]], "abstractbaseclicommandconfiguration (class in gaps.cli.command)": [[13, "gaps.cli.command.AbstractBaseCLICommandConfiguration", false]], "add_dataset() (collector class method)": [[44, "gaps.collection.Collector.add_dataset", false]], "add_handlers() (in module gaps.log)": [[92, "gaps.log.add_handlers", false]], "add_job() (status class method)": [[89, "gaps.legacy.Status.add_job", false]], "arg_combo (batchset attribute)": [[3, "gaps.batch.BatchSet.arg_combo", false]], "as_click_command() (in module gaps.cli.cli)": [[8, "gaps.cli.cli.as_click_command", false]], "as_df() (status method)": [[89, "gaps.legacy.Status.as_df", false], [111, "gaps.status.Status.as_df", false]], "as_script_str() (in module gaps.cli.config)": [[18, "gaps.cli.config.as_script_str", false]], "awspc (hardwareoption attribute)": [[108, "gaps.status.HardwareOption.AWSPC", false]], "batch_command() (in module gaps.cli.batch)": [[6, "gaps.cli.batch.batch_command", false]], "batchjob (class in gaps.batch)": [[2, "gaps.batch.BatchJob", false]], "batchjob (class in gaps.legacy)": [[85, "gaps.legacy.BatchJob", false]], "batchset (class in gaps.batch)": [[3, "gaps.batch.BatchSet", false]], "cancel (commands attribute)": [[74, "gaps.hpc.COMMANDS.CANCEL", false]], "cancel() (batchjob method)": [[2, "gaps.batch.BatchJob.cancel", false], [85, "gaps.legacy.BatchJob.cancel", false]], "cancel() (hpcjobmanager method)": [[76, "gaps.hpc.HpcJobManager.cancel", false]], "cancel() (pbs method)": [[77, "gaps.hpc.PBS.cancel", false]], "cancel() (slurm method)": [[79, "gaps.hpc.SLURM.cancel", false]], "cancel_all() (batchjob class method)": [[85, "gaps.legacy.BatchJob.cancel_all", false]], "cancel_all() (pipeline class method)": [[87, "gaps.legacy.Pipeline.cancel_all", false], [102, "gaps.pipeline.Pipeline.cancel_all", false]], "capitalize() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.capitalize", false]], "capitalize() (configtype method)": [[51, "gaps.config.ConfigType.capitalize", false]], "capitalize() (hardwareoption method)": [[108, "gaps.status.HardwareOption.capitalize", false]], "capitalize() (qosoption method)": [[110, "gaps.status.QOSOption.capitalize", false]], "capitalize() (statusfield method)": [[112, "gaps.status.StatusField.capitalize", false]], "capitalize() (statusoption method)": [[113, "gaps.status.StatusOption.capitalize", false]], "casefold() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.casefold", false]], "casefold() (configtype method)": [[51, "gaps.config.ConfigType.casefold", false]], "casefold() (hardwareoption method)": [[108, "gaps.status.HardwareOption.casefold", false]], "casefold() (qosoption method)": [[110, "gaps.status.QOSOption.casefold", false]], "casefold() (statusfield method)": [[112, "gaps.status.StatusField.casefold", false]], "casefold() (statusoption method)": [[113, "gaps.status.StatusOption.casefold", false]], "caseinsensitiveenum (class in gaps.utilities)": [[116, "gaps.utilities.CaseInsensitiveEnum", false]], "center() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.center", false]], "center() (configtype method)": [[51, "gaps.config.ConfigType.center", false]], "center() (hardwareoption method)": [[108, "gaps.status.HardwareOption.center", false]], "center() (qosoption method)": [[110, "gaps.status.QOSOption.center", false]], "center() (statusfield method)": [[112, "gaps.status.StatusField.center", false]], "center() (statusoption method)": [[113, "gaps.status.StatusOption.center", false]], "charge_factor (hardwareoption property)": [[108, "gaps.status.HardwareOption.charge_factor", false]], "check_status_using_job_id() (hardwareoption method)": [[108, "gaps.status.HardwareOption.check_status_using_job_id", false]], "check_status_using_job_id() (hpcjobmanager method)": [[76, "gaps.hpc.HpcJobManager.check_status_using_job_id", false]], "check_status_using_job_id() (pbs method)": [[77, "gaps.hpc.PBS.check_status_using_job_id", false]], "check_status_using_job_id() (slurm method)": [[79, "gaps.hpc.SLURM.check_status_using_job_id", false]], "check_status_using_job_name() (hpcjobmanager method)": [[76, "gaps.hpc.HpcJobManager.check_status_using_job_name", false]], "check_status_using_job_name() (pbs method)": [[77, "gaps.hpc.PBS.check_status_using_job_name", false]], "check_status_using_job_name() (slurm method)": [[79, "gaps.hpc.SLURM.check_status_using_job_name", false]], "clear() (status method)": [[89, "gaps.legacy.Status.clear", false], [111, "gaps.status.Status.clear", false]], "clicommandconfiguration() (in module gaps.cli.command)": [[14, "gaps.cli.command.CLICommandConfiguration", false]], "clicommandfromclass (class in gaps.cli.command)": [[15, "gaps.cli.command.CLICommandFromClass", false]], "clicommandfromfunction (class in gaps.cli.command)": [[16, "gaps.cli.command.CLICommandFromFunction", false]], "cmd_base (pipeline property)": [[87, "gaps.legacy.Pipeline.CMD_BASE", false]], "collect() (collector method)": [[44, "gaps.collection.Collector.collect", false]], "collect() (in module gaps.cli.collect)": [[11, "gaps.cli.collect.collect", false]], "collect_dataset() (datasetcollector class method)": [[45, "gaps.collection.DatasetCollector.collect_dataset", false]], "collector (class in gaps.collection)": [[44, "gaps.collection.Collector", false]], "column_headers (hpcjobmanager property)": [[76, "gaps.hpc.HpcJobManager.COLUMN_HEADERS", false]], "combine_meta() (collector method)": [[44, "gaps.collection.Collector.combine_meta", false]], "combine_time_index() (collector method)": [[44, "gaps.collection.Collector.combine_time_index", false]], "command (pipelinestep property)": [[103, "gaps.pipeline.PipelineStep.command", false]], "command_help() (commanddocumentation method)": [[23, "gaps.cli.documentation.CommandDocumentation.command_help", false]], "commanddocumentation (class in gaps.cli.documentation)": [[23, "gaps.cli.documentation.CommandDocumentation", false]], "commands (class in gaps.hpc)": [[74, "gaps.hpc.COMMANDS", false]], "commands (hpcjobmanager property)": [[76, "gaps.hpc.HpcJobManager.COMMANDS", false]], "commands (pipeline property)": [[87, "gaps.legacy.Pipeline.COMMANDS", false]], "config_as_str_for_docstring() (in module gaps.config)": [[57, "gaps.config.config_as_str_for_docstring", false]], "config_help() (commanddocumentation method)": [[23, "gaps.cli.documentation.CommandDocumentation.config_help", false]], "configtype (class in gaps.config)": [[51, "gaps.config.ConfigType", false]], "count() (batchset method)": [[3, "gaps.batch.BatchSet.count", false]], "count() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.count", false]], "count() (commands method)": [[74, "gaps.hpc.COMMANDS.count", false]], "count() (configtype method)": [[51, "gaps.config.ConfigType.count", false]], "count() (hardwareoption method)": [[108, "gaps.status.HardwareOption.count", false]], "count() (q_columns method)": [[78, "gaps.hpc.Q_COLUMNS.count", false]], "count() (qosoption method)": [[110, "gaps.status.QOSOption.count", false]], "count() (statusfield method)": [[112, "gaps.status.StatusField.count", false]], "count() (statusoption method)": [[113, "gaps.status.StatusOption.count", false]], "datasetcollector (class in gaps.collection)": [[45, "gaps.collection.DatasetCollector", false]], "default_exec_values (commanddocumentation property)": [[23, "gaps.cli.documentation.CommandDocumentation.default_exec_values", false]], "default_stdout_path (in module gaps.hpc)": [[75, "gaps.hpc.DEFAULT_STDOUT_PATH", false]], "delete() (batchjob method)": [[2, "gaps.batch.BatchJob.delete", false], [85, "gaps.legacy.BatchJob.delete", false]], "delete_all() (batchjob class method)": [[85, "gaps.legacy.BatchJob.delete_all", false]], "df (projectpoints property)": [[106, "gaps.project_points.ProjectPoints.df", false]], "documentation (abstractbaseclicommandconfiguration property)": [[13, "gaps.cli.command.AbstractBaseCLICommandConfiguration.documentation", false]], "documentation (clicommandfromclass property)": [[15, "gaps.cli.command.CLICommandFromClass.documentation", false]], "documentation (clicommandfromfunction property)": [[16, "gaps.cli.command.CLICommandFromFunction.documentation", false]], "dump() (handler class method)": [[52, "gaps.config.Handler.dump", false]], "dump() (json5handler class method)": [[53, "gaps.config.JSON5Handler.dump", false]], "dump() (jsonhandler class method)": [[54, "gaps.config.JSONHandler.dump", false]], "dump() (status method)": [[89, "gaps.legacy.Status.dump", false], [111, "gaps.status.Status.dump", false]], "dump() (tomlhandler class method)": [[55, "gaps.config.TOMLHandler.dump", false]], "dump() (yamlhandler class method)": [[56, "gaps.config.YAMLHandler.dump", false]], "dumps() (handler class method)": [[52, "gaps.config.Handler.dumps", false]], "dumps() (json5handler class method)": [[53, "gaps.config.JSON5Handler.dumps", false]], "dumps() (jsonhandler class method)": [[54, "gaps.config.JSONHandler.dumps", false]], "dumps() (tomlhandler class method)": [[55, "gaps.config.TOMLHandler.dumps", false]], "dumps() (yamlhandler class method)": [[56, "gaps.config.YAMLHandler.dumps", false]], "duplicate_gids (datasetcollector property)": [[45, "gaps.collection.DatasetCollector.duplicate_gids", false]], "eagle (hardwareoption attribute)": [[108, "gaps.status.HardwareOption.EAGLE", false]], "encode() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.encode", false]], "encode() (configtype method)": [[51, "gaps.config.ConfigType.encode", false]], "encode() (hardwareoption method)": [[108, "gaps.status.HardwareOption.encode", false]], "encode() (qosoption method)": [[110, "gaps.status.QOSOption.encode", false]], "encode() (statusfield method)": [[112, "gaps.status.StatusField.encode", false]], "encode() (statusoption method)": [[113, "gaps.status.StatusOption.encode", false]], "endswith() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.endswith", false]], "endswith() (configtype method)": [[51, "gaps.config.ConfigType.endswith", false]], "endswith() (hardwareoption method)": [[108, "gaps.status.HardwareOption.endswith", false]], "endswith() (qosoption method)": [[110, "gaps.status.QOSOption.endswith", false]], "endswith() (statusfield method)": [[112, "gaps.status.StatusField.endswith", false]], "endswith() (statusoption method)": [[113, "gaps.status.StatusOption.endswith", false]], "exec_control_doc (commanddocumentation property)": [[23, "gaps.cli.documentation.CommandDocumentation.exec_control_doc", false]], "expandtabs() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.expandtabs", false]], "expandtabs() (configtype method)": [[51, "gaps.config.ConfigType.expandtabs", false]], "expandtabs() (hardwareoption method)": [[108, "gaps.status.HardwareOption.expandtabs", false]], "expandtabs() (qosoption method)": [[110, "gaps.status.QOSOption.expandtabs", false]], "expandtabs() (statusfield method)": [[112, "gaps.status.StatusField.expandtabs", false]], "expandtabs() (statusoption method)": [[113, "gaps.status.StatusOption.expandtabs", false]], "extended_summary (commanddocumentation property)": [[23, "gaps.cli.documentation.CommandDocumentation.extended_summary", false]], "file_extension (handler property)": [[52, "gaps.config.Handler.FILE_EXTENSION", false]], "file_set (batchset attribute)": [[3, "gaps.batch.BatchSet.file_set", false]], "find() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.find", false]], "find() (configtype method)": [[51, "gaps.config.ConfigType.find", false]], "find() (hardwareoption method)": [[108, "gaps.status.HardwareOption.find", false]], "find() (qosoption method)": [[110, "gaps.status.QOSOption.find", false]], "find() (statusfield method)": [[112, "gaps.status.StatusField.find", false]], "find() (statusoption method)": [[113, "gaps.status.StatusOption.find", false]], "find_h5_files() (in module gaps.collection)": [[46, "gaps.collection.find_h5_files", false]], "format (in module gaps.log)": [[91, "gaps.log.FORMAT", false]], "format() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.format", false]], "format() (configtype method)": [[51, "gaps.config.ConfigType.format", false]], "format() (hardwareoption method)": [[108, "gaps.status.HardwareOption.format", false]], "format() (qosoption method)": [[110, "gaps.status.QOSOption.format", false]], "format() (statusfield method)": [[112, "gaps.status.StatusField.format", false]], "format() (statusoption method)": [[113, "gaps.status.StatusOption.format", false]], "format_env() (in module gaps.hpc)": [[80, "gaps.hpc.format_env", false]], "format_map() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.format_map", false]], "format_map() (configtype method)": [[51, "gaps.config.ConfigType.format_map", false]], "format_map() (hardwareoption method)": [[108, "gaps.status.HardwareOption.format_map", false]], "format_map() (qosoption method)": [[110, "gaps.status.QOSOption.format_map", false]], "format_map() (statusfield method)": [[112, "gaps.status.StatusField.format_map", false]], "format_map() (statusoption method)": [[113, "gaps.status.StatusOption.format_map", false]], "format_walltime() (in module gaps.hpc)": [[81, "gaps.hpc.format_walltime", false]], "from_config() (in module gaps.cli.config)": [[19, "gaps.cli.config.from_config", false]], "from_range() (projectpoints class method)": [[106, "gaps.project_points.ProjectPoints.from_range", false]], "gaps": [[0, "module-gaps", false]], "gaps.batch": [[1, "module-gaps.batch", false]], "gaps.cli": [[4, "module-gaps.cli", false]], "gaps.cli.batch": [[5, "module-gaps.cli.batch", false]], "gaps.cli.cli": [[7, "module-gaps.cli.cli", false]], "gaps.cli.collect": [[10, "module-gaps.cli.collect", false]], "gaps.cli.command": [[12, "module-gaps.cli.command", false]], "gaps.cli.config": [[17, "module-gaps.cli.config", false]], "gaps.cli.documentation": [[22, "module-gaps.cli.documentation", false]], "gaps.cli.execution": [[24, "module-gaps.cli.execution", false]], "gaps.cli.pipeline": [[26, "module-gaps.cli.pipeline", false]], "gaps.cli.preprocessing": [[30, "module-gaps.cli.preprocessing", false]], "gaps.cli.reset": [[34, "module-gaps.cli.reset", false]], "gaps.cli.script": [[36, "module-gaps.cli.script", false]], "gaps.cli.status": [[38, "module-gaps.cli.status", false]], "gaps.cli.templates": [[41, "module-gaps.cli.templates", false]], "gaps.collection": [[43, "module-gaps.collection", false]], "gaps.config": [[50, "module-gaps.config", false]], "gaps.exceptions": [[61, "module-gaps.exceptions", false]], "gaps.hpc": [[73, "module-gaps.hpc", false]], "gaps.legacy": [[84, "module-gaps.legacy", false]], "gaps.log": [[90, "module-gaps.log", false]], "gaps.pipeline": [[101, "module-gaps.pipeline", false]], "gaps.project_points": [[105, "module-gaps.project_points", false]], "gaps.status": [[107, "module-gaps.status", false]], "gaps.utilities": [[115, "module-gaps.utilities", false]], "gaps.warn": [[120, "module-gaps.warn", false]], "gapscollectionwarning": [[121, "gaps.warn.gapsCollectionWarning", false]], "gapsconfigerror": [[62, "gaps.exceptions.gapsConfigError", false]], "gapsdeprecationwarning": [[122, "gaps.warn.gapsDeprecationWarning", false]], "gapserror": [[63, "gaps.exceptions.gapsError", false]], "gapsexecutionerror": [[64, "gaps.exceptions.gapsExecutionError", false]], "gapsfilenotfounderror": [[65, "gaps.exceptions.gapsFileNotFoundError", false]], "gapshpcerror": [[66, "gaps.exceptions.gapsHPCError", false]], "gapshpcwarning": [[123, "gaps.warn.gapsHPCWarning", false]], "gapsindexerror": [[68, "gaps.exceptions.gapsIndexError", false]], "gapsioerror": [[67, "gaps.exceptions.gapsIOError", false]], "gapskeyerror": [[69, "gaps.exceptions.gapsKeyError", false]], "gapsruntimeerror": [[70, "gaps.exceptions.gapsRuntimeError", false]], "gapstypeerror": [[71, "gaps.exceptions.gapsTypeError", false]], "gapsvalueerror": [[72, "gaps.exceptions.gapsValueError", false]], "gapswarning": [[124, "gaps.warn.gapsWarning", false]], "get() (status method)": [[89, "gaps.legacy.Status.get", false], [111, "gaps.status.Status.get", false]], "get_dataset_shape() (collector method)": [[44, "gaps.collection.Collector.get_dataset_shape", false]], "get_sites_from_key() (projectpoints method)": [[106, "gaps.project_points.ProjectPoints.get_sites_from_key", false]], "gids (collector property)": [[44, "gaps.collection.Collector.gids", false]], "gids (datasetcollector property)": [[45, "gaps.collection.DatasetCollector.gids", false]], "gids (projectpoints property)": [[106, "gaps.project_points.ProjectPoints.gids", false]], "h5_files (collector property)": [[44, "gaps.collection.Collector.h5_files", false]], "handler (class in gaps.config)": [[52, "gaps.config.Handler", false]], "hardwareoption (class in gaps.status)": [[108, "gaps.status.HardwareOption", false]], "hardwarestatusretriever (class in gaps.legacy)": [[86, "gaps.legacy.HardwareStatusRetriever", false]], "hardwarestatusretriever (class in gaps.status)": [[109, "gaps.status.HardwareStatusRetriever", false]], "high (qosoption attribute)": [[110, "gaps.status.QOSOption.HIGH", false]], "hpc_parameter_help (commanddocumentation property)": [[23, "gaps.cli.documentation.CommandDocumentation.hpc_parameter_help", false]], "hpcjobmanager (class in gaps.hpc)": [[76, "gaps.hpc.HpcJobManager", false]], "id (q_columns attribute)": [[78, "gaps.hpc.Q_COLUMNS.ID", false]], "index() (batchset method)": [[3, "gaps.batch.BatchSet.index", false]], "index() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.index", false]], "index() (commands method)": [[74, "gaps.hpc.COMMANDS.index", false]], "index() (configtype method)": [[51, "gaps.config.ConfigType.index", false]], "index() (hardwareoption method)": [[108, "gaps.status.HardwareOption.index", false]], "index() (projectpoints method)": [[106, "gaps.project_points.ProjectPoints.index", false]], "index() (q_columns method)": [[78, "gaps.hpc.Q_COLUMNS.index", false]], "index() (qosoption method)": [[110, "gaps.status.QOSOption.index", false]], "index() (statusfield method)": [[112, "gaps.status.StatusField.index", false]], "index() (statusoption method)": [[113, "gaps.status.StatusOption.index", false]], "init_logger() (in module gaps.log)": [[93, "gaps.log.init_logger", false]], "init_logging_from_config_file() (in module gaps.config)": [[58, "gaps.config.init_logging_from_config_file", false]], "is_hpc (hardwareoption property)": [[108, "gaps.status.HardwareOption.is_hpc", false]], "is_split_spatially (abstractbaseclicommandconfiguration property)": [[13, "gaps.cli.command.AbstractBaseCLICommandConfiguration.is_split_spatially", false]], "is_split_spatially (clicommandfromclass property)": [[15, "gaps.cli.command.CLICommandFromClass.is_split_spatially", false]], "is_split_spatially (clicommandfromfunction property)": [[16, "gaps.cli.command.CLICommandFromFunction.is_split_spatially", false]], "isalnum() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.isalnum", false]], "isalnum() (configtype method)": [[51, "gaps.config.ConfigType.isalnum", false]], "isalnum() (hardwareoption method)": [[108, "gaps.status.HardwareOption.isalnum", false]], "isalnum() (qosoption method)": [[110, "gaps.status.QOSOption.isalnum", false]], "isalnum() (statusfield method)": [[112, "gaps.status.StatusField.isalnum", false]], "isalnum() (statusoption method)": [[113, "gaps.status.StatusOption.isalnum", false]], "isalpha() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.isalpha", false]], "isalpha() (configtype method)": [[51, "gaps.config.ConfigType.isalpha", false]], "isalpha() (hardwareoption method)": [[108, "gaps.status.HardwareOption.isalpha", false]], "isalpha() (qosoption method)": [[110, "gaps.status.QOSOption.isalpha", false]], "isalpha() (statusfield method)": [[112, "gaps.status.StatusField.isalpha", false]], "isalpha() (statusoption method)": [[113, "gaps.status.StatusOption.isalpha", false]], "isascii() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.isascii", false]], "isascii() (configtype method)": [[51, "gaps.config.ConfigType.isascii", false]], "isascii() (hardwareoption method)": [[108, "gaps.status.HardwareOption.isascii", false]], "isascii() (qosoption method)": [[110, "gaps.status.QOSOption.isascii", false]], "isascii() (statusfield method)": [[112, "gaps.status.StatusField.isascii", false]], "isascii() (statusoption method)": [[113, "gaps.status.StatusOption.isascii", false]], "isdecimal() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.isdecimal", false]], "isdecimal() (configtype method)": [[51, "gaps.config.ConfigType.isdecimal", false]], "isdecimal() (hardwareoption method)": [[108, "gaps.status.HardwareOption.isdecimal", false]], "isdecimal() (qosoption method)": [[110, "gaps.status.QOSOption.isdecimal", false]], "isdecimal() (statusfield method)": [[112, "gaps.status.StatusField.isdecimal", false]], "isdecimal() (statusoption method)": [[113, "gaps.status.StatusOption.isdecimal", false]], "isdigit() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.isdigit", false]], "isdigit() (configtype method)": [[51, "gaps.config.ConfigType.isdigit", false]], "isdigit() (hardwareoption method)": [[108, "gaps.status.HardwareOption.isdigit", false]], "isdigit() (qosoption method)": [[110, "gaps.status.QOSOption.isdigit", false]], "isdigit() (statusfield method)": [[112, "gaps.status.StatusField.isdigit", false]], "isdigit() (statusoption method)": [[113, "gaps.status.StatusOption.isdigit", false]], "isidentifier() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.isidentifier", false]], "isidentifier() (configtype method)": [[51, "gaps.config.ConfigType.isidentifier", false]], "isidentifier() (hardwareoption method)": [[108, "gaps.status.HardwareOption.isidentifier", false]], "isidentifier() (qosoption method)": [[110, "gaps.status.QOSOption.isidentifier", false]], "isidentifier() (statusfield method)": [[112, "gaps.status.StatusField.isidentifier", false]], "isidentifier() (statusoption method)": [[113, "gaps.status.StatusOption.isidentifier", false]], "islower() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.islower", false]], "islower() (configtype method)": [[51, "gaps.config.ConfigType.islower", false]], "islower() (hardwareoption method)": [[108, "gaps.status.HardwareOption.islower", false]], "islower() (qosoption method)": [[110, "gaps.status.QOSOption.islower", false]], "islower() (statusfield method)": [[112, "gaps.status.StatusField.islower", false]], "islower() (statusoption method)": [[113, "gaps.status.StatusOption.islower", false]], "isnumeric() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.isnumeric", false]], "isnumeric() (configtype method)": [[51, "gaps.config.ConfigType.isnumeric", false]], "isnumeric() (hardwareoption method)": [[108, "gaps.status.HardwareOption.isnumeric", false]], "isnumeric() (qosoption method)": [[110, "gaps.status.QOSOption.isnumeric", false]], "isnumeric() (statusfield method)": [[112, "gaps.status.StatusField.isnumeric", false]], "isnumeric() (statusoption method)": [[113, "gaps.status.StatusOption.isnumeric", false]], "isprintable() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.isprintable", false]], "isprintable() (configtype method)": [[51, "gaps.config.ConfigType.isprintable", false]], "isprintable() (hardwareoption method)": [[108, "gaps.status.HardwareOption.isprintable", false]], "isprintable() (qosoption method)": [[110, "gaps.status.QOSOption.isprintable", false]], "isprintable() (statusfield method)": [[112, "gaps.status.StatusField.isprintable", false]], "isprintable() (statusoption method)": [[113, "gaps.status.StatusOption.isprintable", false]], "isspace() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.isspace", false]], "isspace() (configtype method)": [[51, "gaps.config.ConfigType.isspace", false]], "isspace() (hardwareoption method)": [[108, "gaps.status.HardwareOption.isspace", false]], "isspace() (qosoption method)": [[110, "gaps.status.QOSOption.isspace", false]], "isspace() (statusfield method)": [[112, "gaps.status.StatusField.isspace", false]], "isspace() (statusoption method)": [[113, "gaps.status.StatusOption.isspace", false]], "istitle() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.istitle", false]], "istitle() (configtype method)": [[51, "gaps.config.ConfigType.istitle", false]], "istitle() (hardwareoption method)": [[108, "gaps.status.HardwareOption.istitle", false]], "istitle() (qosoption method)": [[110, "gaps.status.QOSOption.istitle", false]], "istitle() (statusfield method)": [[112, "gaps.status.StatusField.istitle", false]], "istitle() (statusoption method)": [[113, "gaps.status.StatusOption.istitle", false]], "isupper() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.isupper", false]], "isupper() (configtype method)": [[51, "gaps.config.ConfigType.isupper", false]], "isupper() (hardwareoption method)": [[108, "gaps.status.HardwareOption.isupper", false]], "isupper() (qosoption method)": [[110, "gaps.status.QOSOption.isupper", false]], "isupper() (statusfield method)": [[112, "gaps.status.StatusField.isupper", false]], "isupper() (statusoption method)": [[113, "gaps.status.StatusOption.isupper", false]], "items() (status method)": [[89, "gaps.legacy.Status.items", false], [111, "gaps.status.Status.items", false]], "job_exists() (status class method)": [[89, "gaps.legacy.Status.job_exists", false], [111, "gaps.status.Status.job_exists", false]], "job_hardware (status property)": [[89, "gaps.legacy.Status.job_hardware", false], [111, "gaps.status.Status.job_hardware", false]], "job_ids (status property)": [[89, "gaps.legacy.Status.job_ids", false], [111, "gaps.status.Status.job_ids", false]], "job_table (batchjob property)": [[2, "gaps.batch.BatchJob.job_table", false], [85, "gaps.legacy.BatchJob.job_table", false]], "join() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.join", false]], "join() (configtype method)": [[51, "gaps.config.ConfigType.join", false]], "join() (hardwareoption method)": [[108, "gaps.status.HardwareOption.join", false]], "join() (qosoption method)": [[110, "gaps.status.QOSOption.join", false]], "join() (statusfield method)": [[112, "gaps.status.StatusField.join", false]], "join() (statusoption method)": [[113, "gaps.status.StatusOption.join", false]], "join_df() (projectpoints method)": [[106, "gaps.project_points.ProjectPoints.join_df", false]], "json5handler (class in gaps.config)": [[53, "gaps.config.JSON5Handler", false]], "jsonhandler (class in gaps.config)": [[54, "gaps.config.JSONHandler", false]], "kestrel (hardwareoption attribute)": [[108, "gaps.status.HardwareOption.KESTREL", false]], "keys() (status method)": [[89, "gaps.legacy.Status.keys", false], [111, "gaps.status.Status.keys", false]], "kickoff_job() (in module gaps.cli.execution)": [[25, "gaps.cli.execution.kickoff_job", false]], "ljust() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.ljust", false]], "ljust() (configtype method)": [[51, "gaps.config.ConfigType.ljust", false]], "ljust() (hardwareoption method)": [[108, "gaps.status.HardwareOption.ljust", false]], "ljust() (qosoption method)": [[110, "gaps.status.QOSOption.ljust", false]], "ljust() (statusfield method)": [[112, "gaps.status.StatusField.ljust", false]], "ljust() (statusoption method)": [[113, "gaps.status.StatusOption.ljust", false]], "load() (handler class method)": [[52, "gaps.config.Handler.load", false]], "load() (json5handler class method)": [[53, "gaps.config.JSON5Handler.load", false]], "load() (jsonhandler class method)": [[54, "gaps.config.JSONHandler.load", false]], "load() (tomlhandler class method)": [[55, "gaps.config.TOMLHandler.load", false]], "load() (yamlhandler class method)": [[56, "gaps.config.YAMLHandler.load", false]], "load_config() (in module gaps.config)": [[59, "gaps.config.load_config", false]], "loads() (handler class method)": [[52, "gaps.config.Handler.loads", false]], "loads() (json5handler class method)": [[53, "gaps.config.JSON5Handler.loads", false]], "loads() (jsonhandler class method)": [[54, "gaps.config.JSONHandler.loads", false]], "loads() (tomlhandler class method)": [[55, "gaps.config.TOMLHandler.loads", false]], "loads() (yamlhandler class method)": [[56, "gaps.config.YAMLHandler.loads", false]], "local (hardwareoption attribute)": [[108, "gaps.status.HardwareOption.LOCAL", false]], "log_mem() (in module gaps.log)": [[94, "gaps.log.log_mem", false]], "log_versions() (in module gaps.log)": [[95, "gaps.log.log_versions", false]], "lower() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.lower", false]], "lower() (configtype method)": [[51, "gaps.config.ConfigType.lower", false]], "lower() (hardwareoption method)": [[108, "gaps.status.HardwareOption.lower", false]], "lower() (qosoption method)": [[110, "gaps.status.QOSOption.lower", false]], "lower() (statusfield method)": [[112, "gaps.status.StatusField.lower", false]], "lower() (statusoption method)": [[113, "gaps.status.StatusOption.lower", false]], "lstrip() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.lstrip", false]], "lstrip() (configtype method)": [[51, "gaps.config.ConfigType.lstrip", false]], "lstrip() (hardwareoption method)": [[108, "gaps.status.HardwareOption.lstrip", false]], "lstrip() (qosoption method)": [[110, "gaps.status.QOSOption.lstrip", false]], "lstrip() (statusfield method)": [[112, "gaps.status.StatusField.lstrip", false]], "lstrip() (statusoption method)": [[113, "gaps.status.StatusOption.lstrip", false]], "main_monitor() (in module gaps.cli.status)": [[39, "gaps.cli.status.main_monitor", false]], "make_cli() (in module gaps.cli.cli)": [[9, "gaps.cli.cli.make_cli", false]], "make_handler() (in module gaps.log)": [[96, "gaps.log.make_handler", false]], "make_job_file() (status static method)": [[89, "gaps.legacy.Status.make_job_file", false]], "make_log_file_handler() (in module gaps.log)": [[97, "gaps.log.make_log_file_handler", false]], "make_log_stream_handler() (in module gaps.log)": [[98, "gaps.log.make_log_stream_handler", false]], "make_script_str() (hpcjobmanager method)": [[76, "gaps.hpc.HpcJobManager.make_script_str", false]], "make_script_str() (pbs method)": [[77, "gaps.hpc.PBS.make_script_str", false]], "make_script_str() (slurm method)": [[79, "gaps.hpc.SLURM.make_script_str", false]], "make_sh() (in module gaps.hpc)": [[82, "gaps.hpc.make_sh", false]], "make_single_job_file() (status class method)": [[89, "gaps.legacy.Status.make_single_job_file", false], [111, "gaps.status.Status.make_single_job_file", false]], "maketrans() (caseinsensitiveenum static method)": [[116, "gaps.utilities.CaseInsensitiveEnum.maketrans", false]], "maketrans() (configtype static method)": [[51, "gaps.config.ConfigType.maketrans", false]], "maketrans() (hardwareoption static method)": [[108, "gaps.status.HardwareOption.maketrans", false]], "maketrans() (qosoption static method)": [[110, "gaps.status.QOSOption.maketrans", false]], "maketrans() (statusfield static method)": [[112, "gaps.status.StatusField.maketrans", false]], "maketrans() (statusoption static method)": [[113, "gaps.status.StatusOption.maketrans", false]], "mark_job_as_submitted() (status class method)": [[89, "gaps.legacy.Status.mark_job_as_submitted", false], [111, "gaps.status.Status.mark_job_as_submitted", false]], "members_as_str() (caseinsensitiveenum class method)": [[116, "gaps.utilities.CaseInsensitiveEnum.members_as_str", false]], "members_as_str() (configtype class method)": [[51, "gaps.config.ConfigType.members_as_str", false]], "members_as_str() (hardwareoption class method)": [[108, "gaps.status.HardwareOption.members_as_str", false]], "members_as_str() (qosoption class method)": [[110, "gaps.status.QOSOption.members_as_str", false]], "members_as_str() (statusfield class method)": [[112, "gaps.status.StatusField.members_as_str", false]], "members_as_str() (statusoption class method)": [[113, "gaps.status.StatusOption.members_as_str", false]], "module": [[0, "module-gaps", false], [1, "module-gaps.batch", false], [4, "module-gaps.cli", false], [5, "module-gaps.cli.batch", false], [7, "module-gaps.cli.cli", false], [10, "module-gaps.cli.collect", false], [12, "module-gaps.cli.command", false], [17, "module-gaps.cli.config", false], [22, "module-gaps.cli.documentation", false], [24, "module-gaps.cli.execution", false], [26, "module-gaps.cli.pipeline", false], [30, "module-gaps.cli.preprocessing", false], [34, "module-gaps.cli.reset", false], [36, "module-gaps.cli.script", false], [38, "module-gaps.cli.status", false], [41, "module-gaps.cli.templates", false], [43, "module-gaps.collection", false], [50, "module-gaps.config", false], [61, "module-gaps.exceptions", false], [73, "module-gaps.hpc", false], [84, "module-gaps.legacy", false], [90, "module-gaps.log", false], [101, "module-gaps.pipeline", false], [105, "module-gaps.project_points", false], [107, "module-gaps.status", false], [115, "module-gaps.utilities", false], [120, "module-gaps.warn", false]], "move_chunks() (collector method)": [[44, "gaps.collection.Collector.move_chunks", false]], "name (pipeline property)": [[87, "gaps.legacy.Pipeline.name", false], [102, "gaps.pipeline.Pipeline.name", false]], "name (q_columns attribute)": [[78, "gaps.hpc.Q_COLUMNS.NAME", false]], "node_kwargs() (in module gaps.cli.config)": [[20, "gaps.cli.config.node_kwargs", false]], "normal (qosoption attribute)": [[110, "gaps.status.QOSOption.NORMAL", false]], "param_required() (commanddocumentation method)": [[23, "gaps.cli.documentation.CommandDocumentation.param_required", false]], "parameter_help (commanddocumentation property)": [[23, "gaps.cli.documentation.CommandDocumentation.parameter_help", false]], "parse_gids_from_files() (in module gaps.collection)": [[47, "gaps.collection.parse_gids_from_files", false]], "parse_meta() (in module gaps.collection)": [[48, "gaps.collection.parse_meta", false]], "parse_previous_status() (in module gaps.pipeline)": [[104, "gaps.pipeline.parse_previous_status", false]], "parse_project_points() (in module gaps.collection)": [[49, "gaps.collection.parse_project_points", false]], "parse_queue_str() (hpcjobmanager class method)": [[76, "gaps.hpc.HpcJobManager.parse_queue_str", false]], "parse_queue_str() (pbs class method)": [[77, "gaps.hpc.PBS.parse_queue_str", false]], "parse_queue_str() (slurm class method)": [[79, "gaps.hpc.SLURM.parse_queue_str", false]], "parse_step_status() (status class method)": [[89, "gaps.legacy.Status.parse_step_status", false], [111, "gaps.status.Status.parse_step_status", false]], "partition() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.partition", false]], "partition() (configtype method)": [[51, "gaps.config.ConfigType.partition", false]], "partition() (hardwareoption method)": [[108, "gaps.status.HardwareOption.partition", false]], "partition() (qosoption method)": [[110, "gaps.status.QOSOption.partition", false]], "partition() (statusfield method)": [[112, "gaps.status.StatusField.partition", false]], "partition() (statusoption method)": [[113, "gaps.status.StatusOption.partition", false]], "pbs (class in gaps.hpc)": [[77, "gaps.hpc.PBS", false]], "peregrine (hardwareoption attribute)": [[108, "gaps.status.HardwareOption.PEREGRINE", false]], "pipeline (class in gaps.legacy)": [[87, "gaps.legacy.Pipeline", false]], "pipeline (class in gaps.pipeline)": [[102, "gaps.pipeline.Pipeline", false]], "pipeline() (in module gaps.cli.pipeline)": [[27, "gaps.cli.pipeline.pipeline", false]], "pipeline_background_method (batchjob property)": [[85, "gaps.legacy.BatchJob.PIPELINE_BACKGROUND_METHOD", false]], "pipeline_class (batchjob property)": [[85, "gaps.legacy.BatchJob.PIPELINE_CLASS", false]], "pipeline_command() (in module gaps.cli.pipeline)": [[28, "gaps.cli.pipeline.pipeline_command", false]], "pipelineerror": [[88, "gaps.legacy.PipelineError", false]], "pipelinestep (class in gaps.pipeline)": [[103, "gaps.pipeline.PipelineStep", false]], "pop() (status method)": [[89, "gaps.legacy.Status.pop", false], [111, "gaps.status.Status.pop", false]], "popitem() (status method)": [[89, "gaps.legacy.Status.popitem", false], [111, "gaps.status.Status.popitem", false]], "preprocess_collect_config() (in module gaps.cli.preprocessing)": [[31, "gaps.cli.preprocessing.preprocess_collect_config", false]], "preprocess_script_config() (in module gaps.cli.preprocessing)": [[32, "gaps.cli.preprocessing.preprocess_script_config", false]], "print_logging_info() (in module gaps.log)": [[99, "gaps.log.print_logging_info", false]], "print_logging_info_all_libraries() (in module gaps.log)": [[100, "gaps.log.print_logging_info_all_libraries", false]], "project_points_from_container_or_slice() (in module gaps.utilities)": [[117, "gaps.utilities.project_points_from_container_or_slice", false]], "projectpoints (class in gaps.project_points)": [[106, "gaps.project_points.ProjectPoints", false]], "purge_chunks() (collector method)": [[44, "gaps.collection.Collector.purge_chunks", false]], "q_columns (class in gaps.hpc)": [[78, "gaps.hpc.Q_COLUMNS", false]], "q_submitted_status (hpcjobmanager property)": [[76, "gaps.hpc.HpcJobManager.Q_SUBMITTED_STATUS", false]], "qosoption (class in gaps.status)": [[110, "gaps.status.QOSOption", false]], "query_queue() (hpcjobmanager method)": [[76, "gaps.hpc.HpcJobManager.query_queue", false]], "query_queue() (pbs method)": [[77, "gaps.hpc.PBS.query_queue", false]], "query_queue() (slurm method)": [[79, "gaps.hpc.SLURM.query_queue", false]], "queue (hpcjobmanager property)": [[76, "gaps.hpc.HpcJobManager.queue", false]], "queue (pbs property)": [[77, "gaps.hpc.PBS.queue", false]], "queue (slurm property)": [[79, "gaps.hpc.SLURM.queue", false]], "record_monitor_pid() (status class method)": [[89, "gaps.legacy.Status.record_monitor_pid", false], [111, "gaps.status.Status.record_monitor_pid", false]], "recursively_update_dict() (in module gaps.utilities)": [[118, "gaps.utilities.recursively_update_dict", false]], "reload() (status method)": [[89, "gaps.legacy.Status.reload", false], [111, "gaps.status.Status.reload", false]], "removeprefix() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.removeprefix", false]], "removeprefix() (configtype method)": [[51, "gaps.config.ConfigType.removeprefix", false]], "removeprefix() (hardwareoption method)": [[108, "gaps.status.HardwareOption.removeprefix", false]], "removeprefix() (qosoption method)": [[110, "gaps.status.QOSOption.removeprefix", false]], "removeprefix() (statusfield method)": [[112, "gaps.status.StatusField.removeprefix", false]], "removeprefix() (statusoption method)": [[113, "gaps.status.StatusOption.removeprefix", false]], "removesuffix() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.removesuffix", false]], "removesuffix() (configtype method)": [[51, "gaps.config.ConfigType.removesuffix", false]], "removesuffix() (hardwareoption method)": [[108, "gaps.status.HardwareOption.removesuffix", false]], "removesuffix() (qosoption method)": [[110, "gaps.status.QOSOption.removesuffix", false]], "removesuffix() (statusfield method)": [[112, "gaps.status.StatusField.removesuffix", false]], "removesuffix() (statusoption method)": [[113, "gaps.status.StatusOption.removesuffix", false]], "replace() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.replace", false]], "replace() (configtype method)": [[51, "gaps.config.ConfigType.replace", false]], "replace() (hardwareoption method)": [[108, "gaps.status.HardwareOption.replace", false]], "replace() (qosoption method)": [[110, "gaps.status.QOSOption.replace", false]], "replace() (statusfield method)": [[112, "gaps.status.StatusField.replace", false]], "replace() (statusoption method)": [[113, "gaps.status.StatusOption.replace", false]], "required_args (commanddocumentation property)": [[23, "gaps.cli.documentation.CommandDocumentation.required_args", false]], "reset_after() (status method)": [[89, "gaps.legacy.Status.reset_after", false], [111, "gaps.status.Status.reset_after", false]], "reset_all_cached_queries() (hardwareoption class method)": [[108, "gaps.status.HardwareOption.reset_all_cached_queries", false]], "reset_command() (in module gaps.cli.reset)": [[35, "gaps.cli.reset.reset_command", false]], "reset_query_cache() (hpcjobmanager method)": [[76, "gaps.hpc.HpcJobManager.reset_query_cache", false]], "reset_query_cache() (pbs method)": [[77, "gaps.hpc.PBS.reset_query_cache", false]], "reset_query_cache() (slurm method)": [[79, "gaps.hpc.SLURM.reset_query_cache", false]], "resolve_all_paths() (in module gaps.config)": [[60, "gaps.config.resolve_all_paths", false]], "resolve_path() (in module gaps.utilities)": [[119, "gaps.utilities.resolve_path", false]], "retrieve_job_status() (status class method)": [[89, "gaps.legacy.Status.retrieve_job_status", false], [111, "gaps.status.Status.retrieve_job_status", false]], "rfind() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.rfind", false]], "rfind() (configtype method)": [[51, "gaps.config.ConfigType.rfind", false]], "rfind() (hardwareoption method)": [[108, "gaps.status.HardwareOption.rfind", false]], "rfind() (qosoption method)": [[110, "gaps.status.QOSOption.rfind", false]], "rfind() (statusfield method)": [[112, "gaps.status.StatusField.rfind", false]], "rfind() (statusoption method)": [[113, "gaps.status.StatusOption.rfind", false]], "rindex() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.rindex", false]], "rindex() (configtype method)": [[51, "gaps.config.ConfigType.rindex", false]], "rindex() (hardwareoption method)": [[108, "gaps.status.HardwareOption.rindex", false]], "rindex() (qosoption method)": [[110, "gaps.status.QOSOption.rindex", false]], "rindex() (statusfield method)": [[112, "gaps.status.StatusField.rindex", false]], "rindex() (statusoption method)": [[113, "gaps.status.StatusOption.rindex", false]], "rjust() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.rjust", false]], "rjust() (configtype method)": [[51, "gaps.config.ConfigType.rjust", false]], "rjust() (hardwareoption method)": [[108, "gaps.status.HardwareOption.rjust", false]], "rjust() (qosoption method)": [[110, "gaps.status.QOSOption.rjust", false]], "rjust() (statusfield method)": [[112, "gaps.status.StatusField.rjust", false]], "rjust() (statusoption method)": [[113, "gaps.status.StatusOption.rjust", false]], "rpartition() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.rpartition", false]], "rpartition() (configtype method)": [[51, "gaps.config.ConfigType.rpartition", false]], "rpartition() (hardwareoption method)": [[108, "gaps.status.HardwareOption.rpartition", false]], "rpartition() (qosoption method)": [[110, "gaps.status.QOSOption.rpartition", false]], "rpartition() (statusfield method)": [[112, "gaps.status.StatusField.rpartition", false]], "rpartition() (statusoption method)": [[113, "gaps.status.StatusOption.rpartition", false]], "rsplit() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.rsplit", false]], "rsplit() (configtype method)": [[51, "gaps.config.ConfigType.rsplit", false]], "rsplit() (hardwareoption method)": [[108, "gaps.status.HardwareOption.rsplit", false]], "rsplit() (qosoption method)": [[110, "gaps.status.QOSOption.rsplit", false]], "rsplit() (statusfield method)": [[112, "gaps.status.StatusField.rsplit", false]], "rsplit() (statusoption method)": [[113, "gaps.status.StatusOption.rsplit", false]], "rstrip() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.rstrip", false]], "rstrip() (configtype method)": [[51, "gaps.config.ConfigType.rstrip", false]], "rstrip() (hardwareoption method)": [[108, "gaps.status.HardwareOption.rstrip", false]], "rstrip() (qosoption method)": [[110, "gaps.status.QOSOption.rstrip", false]], "rstrip() (statusfield method)": [[112, "gaps.status.StatusField.rstrip", false]], "rstrip() (statusoption method)": [[113, "gaps.status.StatusOption.rstrip", false]], "run() (batchjob class method)": [[85, "gaps.legacy.BatchJob.run", false]], "run() (batchjob method)": [[2, "gaps.batch.BatchJob.run", false]], "run() (pipeline class method)": [[87, "gaps.legacy.Pipeline.run", false], [102, "gaps.pipeline.Pipeline.run", false]], "run_with_status_updates() (in module gaps.cli.config)": [[21, "gaps.cli.config.run_with_status_updates", false]], "script() (in module gaps.cli.script)": [[37, "gaps.cli.script.script", false]], "setdefault() (status method)": [[89, "gaps.legacy.Status.setdefault", false], [111, "gaps.status.Status.setdefault", false]], "sites_as_slice (projectpoints property)": [[106, "gaps.project_points.ProjectPoints.sites_as_slice", false]], "slurm (class in gaps.hpc)": [[79, "gaps.hpc.SLURM", false]], "slurm (hardwareoption attribute)": [[108, "gaps.status.HardwareOption.SLURM", false]], "split() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.split", false]], "split() (configtype method)": [[51, "gaps.config.ConfigType.split", false]], "split() (hardwareoption method)": [[108, "gaps.status.HardwareOption.split", false]], "split() (projectpoints method)": [[106, "gaps.project_points.ProjectPoints.split", false]], "split() (qosoption method)": [[110, "gaps.status.QOSOption.split", false]], "split() (statusfield method)": [[112, "gaps.status.StatusField.split", false]], "split() (statusoption method)": [[113, "gaps.status.StatusOption.split", false]], "split_project_points_into_ranges() (in module gaps.cli.preprocessing)": [[33, "gaps.cli.preprocessing.split_project_points_into_ranges", false]], "splitlines() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.splitlines", false]], "splitlines() (configtype method)": [[51, "gaps.config.ConfigType.splitlines", false]], "splitlines() (hardwareoption method)": [[108, "gaps.status.HardwareOption.splitlines", false]], "splitlines() (qosoption method)": [[110, "gaps.status.QOSOption.splitlines", false]], "splitlines() (statusfield method)": [[112, "gaps.status.StatusField.splitlines", false]], "splitlines() (statusoption method)": [[113, "gaps.status.StatusOption.splitlines", false]], "standby (qosoption attribute)": [[110, "gaps.status.QOSOption.STANDBY", false]], "startswith() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.startswith", false]], "startswith() (configtype method)": [[51, "gaps.config.ConfigType.startswith", false]], "startswith() (hardwareoption method)": [[108, "gaps.status.HardwareOption.startswith", false]], "startswith() (qosoption method)": [[110, "gaps.status.QOSOption.startswith", false]], "startswith() (statusfield method)": [[112, "gaps.status.StatusField.startswith", false]], "startswith() (statusoption method)": [[113, "gaps.status.StatusOption.startswith", false]], "status (class in gaps.legacy)": [[89, "gaps.legacy.Status", false]], "status (class in gaps.status)": [[111, "gaps.status.Status", false]], "status (pipeline property)": [[87, "gaps.legacy.Pipeline.status", false], [102, "gaps.pipeline.Pipeline.status", false]], "status (q_columns attribute)": [[78, "gaps.hpc.Q_COLUMNS.STATUS", false]], "status_command() (in module gaps.cli.status)": [[40, "gaps.cli.status.status_command", false]], "statusfield (class in gaps.status)": [[112, "gaps.status.StatusField", false]], "statusoption (class in gaps.status)": [[113, "gaps.status.StatusOption", false]], "statusupdates (class in gaps.status)": [[114, "gaps.status.StatusUpdates", false]], "step_index() (status method)": [[89, "gaps.legacy.Status.step_index", false], [111, "gaps.status.Status.step_index", false]], "strip() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.strip", false]], "strip() (configtype method)": [[51, "gaps.config.ConfigType.strip", false]], "strip() (hardwareoption method)": [[108, "gaps.status.HardwareOption.strip", false]], "strip() (qosoption method)": [[110, "gaps.status.QOSOption.strip", false]], "strip() (statusfield method)": [[112, "gaps.status.StatusField.strip", false]], "strip() (statusoption method)": [[113, "gaps.status.StatusOption.strip", false]], "sub_dirs (batchjob property)": [[2, "gaps.batch.BatchJob.sub_dirs", false], [85, "gaps.legacy.BatchJob.sub_dirs", false]], "submit (commands attribute)": [[74, "gaps.hpc.COMMANDS.SUBMIT", false]], "submit() (hpcjobmanager method)": [[76, "gaps.hpc.HpcJobManager.submit", false]], "submit() (in module gaps.hpc)": [[83, "gaps.hpc.submit", false]], "submit() (pbs method)": [[77, "gaps.hpc.PBS.submit", false]], "submit() (slurm method)": [[79, "gaps.hpc.SLURM.submit", false]], "supports_categorical_qos (hardwareoption property)": [[108, "gaps.status.HardwareOption.supports_categorical_qos", false]], "swapcase() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.swapcase", false]], "swapcase() (configtype method)": [[51, "gaps.config.ConfigType.swapcase", false]], "swapcase() (hardwareoption method)": [[108, "gaps.status.HardwareOption.swapcase", false]], "swapcase() (qosoption method)": [[110, "gaps.status.QOSOption.swapcase", false]], "swapcase() (statusfield method)": [[112, "gaps.status.StatusField.swapcase", false]], "swapcase() (statusoption method)": [[113, "gaps.status.StatusOption.swapcase", false]], "tag (batchset attribute)": [[3, "gaps.batch.BatchSet.tag", false]], "template_command() (in module gaps.cli.templates)": [[42, "gaps.cli.templates.template_command", false]], "template_config (commanddocumentation property)": [[23, "gaps.cli.documentation.CommandDocumentation.template_config", false]], "template_pipeline_config() (in module gaps.cli.pipeline)": [[29, "gaps.cli.pipeline.template_pipeline_config", false]], "title() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.title", false]], "title() (configtype method)": [[51, "gaps.config.ConfigType.title", false]], "title() (hardwareoption method)": [[108, "gaps.status.HardwareOption.title", false]], "title() (qosoption method)": [[110, "gaps.status.QOSOption.title", false]], "title() (statusfield method)": [[112, "gaps.status.StatusField.title", false]], "title() (statusoption method)": [[113, "gaps.status.StatusOption.title", false]], "tomlhandler (class in gaps.config)": [[55, "gaps.config.TOMLHandler", false]], "translate() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.translate", false]], "translate() (configtype method)": [[51, "gaps.config.ConfigType.translate", false]], "translate() (hardwareoption method)": [[108, "gaps.status.HardwareOption.translate", false]], "translate() (qosoption method)": [[110, "gaps.status.QOSOption.translate", false]], "translate() (statusfield method)": [[112, "gaps.status.StatusField.translate", false]], "translate() (statusoption method)": [[113, "gaps.status.StatusOption.translate", false]], "unspecified (qosoption attribute)": [[110, "gaps.status.QOSOption.UNSPECIFIED", false]], "update() (status method)": [[89, "gaps.legacy.Status.update", false], [111, "gaps.status.Status.update", false]], "update_from_all_job_files() (status method)": [[89, "gaps.legacy.Status.update_from_all_job_files", false], [111, "gaps.status.Status.update_from_all_job_files", false]], "update_job_status() (status method)": [[89, "gaps.legacy.Status.update_job_status", false], [111, "gaps.status.Status.update_job_status", false]], "upper() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.upper", false]], "upper() (configtype method)": [[51, "gaps.config.ConfigType.upper", false]], "upper() (hardwareoption method)": [[108, "gaps.status.HardwareOption.upper", false]], "upper() (qosoption method)": [[110, "gaps.status.QOSOption.upper", false]], "upper() (statusfield method)": [[112, "gaps.status.StatusField.upper", false]], "upper() (statusoption method)": [[113, "gaps.status.StatusOption.upper", false]], "values() (status method)": [[89, "gaps.legacy.Status.values", false], [111, "gaps.status.Status.values", false]], "write() (handler class method)": [[52, "gaps.config.Handler.write", false]], "write() (json5handler class method)": [[53, "gaps.config.JSON5Handler.write", false]], "write() (jsonhandler class method)": [[54, "gaps.config.JSONHandler.write", false]], "write() (tomlhandler class method)": [[55, "gaps.config.TOMLHandler.write", false]], "write() (yamlhandler class method)": [[56, "gaps.config.YAMLHandler.write", false]], "yamlhandler (class in gaps.config)": [[56, "gaps.config.YAMLHandler", false]], "zfill() (caseinsensitiveenum method)": [[116, "gaps.utilities.CaseInsensitiveEnum.zfill", false]], "zfill() (configtype method)": [[51, "gaps.config.ConfigType.zfill", false]], "zfill() (hardwareoption method)": [[108, "gaps.status.HardwareOption.zfill", false]], "zfill() (qosoption method)": [[110, "gaps.status.QOSOption.zfill", false]], "zfill() (statusfield method)": [[112, "gaps.status.StatusField.zfill", false]], "zfill() (statusoption method)": [[113, "gaps.status.StatusOption.zfill", false]]}, "objects": {"": [[0, 0, 0, "-", "gaps"]], "gaps": [[1, 0, 0, "-", "batch"], [4, 0, 0, "-", "cli"], [43, 0, 0, "-", "collection"], [50, 0, 0, "-", "config"], [61, 0, 0, "-", "exceptions"], [73, 0, 0, "-", "hpc"], [84, 0, 0, "-", "legacy"], [90, 0, 0, "-", "log"], [101, 0, 0, "-", "pipeline"], [105, 0, 0, "-", "project_points"], [107, 0, 0, "-", "status"], [115, 0, 0, "-", "utilities"], [120, 0, 0, "-", "warn"]], "gaps.batch": [[2, 1, 1, "", "BatchJob"], [3, 1, 1, "", "BatchSet"]], "gaps.batch.BatchJob": [[2, 2, 1, "", "cancel"], [2, 2, 1, "", "delete"], [2, 3, 1, "", "job_table"], [2, 2, 1, "", "run"], [2, 3, 1, "", "sub_dirs"]], "gaps.batch.BatchSet": [[3, 2, 1, "", "__add__"], [3, 2, 1, "", "__mul__"], [3, 4, 1, "", "arg_combo"], [3, 2, 1, "", "count"], [3, 4, 1, "", "file_set"], [3, 2, 1, "", "index"], [3, 4, 1, "", "tag"]], "gaps.cli": [[5, 0, 0, "-", "batch"], [7, 0, 0, "-", "cli"], [10, 0, 0, "-", "collect"], [12, 0, 0, "-", "command"], [17, 0, 0, "-", "config"], [22, 0, 0, "-", "documentation"], [24, 0, 0, "-", "execution"], [26, 0, 0, "-", "pipeline"], [30, 0, 0, "-", "preprocessing"], [34, 0, 0, "-", "reset"], [36, 0, 0, "-", "script"], [38, 0, 0, "-", "status"], [41, 0, 0, "-", "templates"]], "gaps.cli.batch": [[6, 5, 1, "", "batch_command"]], "gaps.cli.cli": [[8, 5, 1, "", "as_click_command"], [9, 5, 1, "", "make_cli"]], "gaps.cli.collect": [[11, 5, 1, "", "collect"]], "gaps.cli.command": [[13, 1, 1, "", "AbstractBaseCLICommandConfiguration"], [14, 5, 1, "", "CLICommandConfiguration"], [15, 1, 1, "", "CLICommandFromClass"], [16, 1, 1, "", "CLICommandFromFunction"]], "gaps.cli.command.AbstractBaseCLICommandConfiguration": [[13, 3, 1, "", "documentation"], [13, 3, 1, "", "is_split_spatially"]], "gaps.cli.command.CLICommandFromClass": [[15, 3, 1, "", "documentation"], [15, 3, 1, "", "is_split_spatially"]], "gaps.cli.command.CLICommandFromFunction": [[16, 3, 1, "", "documentation"], [16, 3, 1, "", "is_split_spatially"]], "gaps.cli.config": [[18, 5, 1, "", "as_script_str"], [19, 5, 1, "", "from_config"], [20, 5, 1, "", "node_kwargs"], [21, 5, 1, "", "run_with_status_updates"]], "gaps.cli.documentation": [[23, 1, 1, "", "CommandDocumentation"]], "gaps.cli.documentation.CommandDocumentation": [[23, 2, 1, "", "command_help"], [23, 2, 1, "", "config_help"], [23, 3, 1, "", "default_exec_values"], [23, 3, 1, "", "exec_control_doc"], [23, 3, 1, "", "extended_summary"], [23, 3, 1, "", "hpc_parameter_help"], [23, 2, 1, "", "param_required"], [23, 3, 1, "", "parameter_help"], [23, 3, 1, "", "required_args"], [23, 3, 1, "", "template_config"]], "gaps.cli.execution": [[25, 5, 1, "", "kickoff_job"]], "gaps.cli.pipeline": [[27, 5, 1, "", "pipeline"], [28, 5, 1, "", "pipeline_command"], [29, 5, 1, "", "template_pipeline_config"]], "gaps.cli.preprocessing": [[31, 5, 1, "", "preprocess_collect_config"], [32, 5, 1, "", "preprocess_script_config"], [33, 5, 1, "", "split_project_points_into_ranges"]], "gaps.cli.reset": [[35, 5, 1, "", "reset_command"]], "gaps.cli.script": [[37, 5, 1, "", "script"]], "gaps.cli.status": [[39, 5, 1, "", "main_monitor"], [40, 5, 1, "", "status_command"]], "gaps.cli.templates": [[42, 5, 1, "", "template_command"]], "gaps.collection": [[44, 1, 1, "", "Collector"], [45, 1, 1, "", "DatasetCollector"], [46, 5, 1, "", "find_h5_files"], [47, 5, 1, "", "parse_gids_from_files"], [48, 5, 1, "", "parse_meta"], [49, 5, 1, "", "parse_project_points"]], "gaps.collection.Collector": [[44, 2, 1, "", "add_dataset"], [44, 2, 1, "", "collect"], [44, 2, 1, "", "combine_meta"], [44, 2, 1, "", "combine_time_index"], [44, 2, 1, "", "get_dataset_shape"], [44, 3, 1, "", "gids"], [44, 3, 1, "", "h5_files"], [44, 2, 1, "", "move_chunks"], [44, 2, 1, "", "purge_chunks"]], "gaps.collection.DatasetCollector": [[45, 2, 1, "", "collect_dataset"], [45, 3, 1, "", "duplicate_gids"], [45, 3, 1, "", "gids"]], "gaps.config": [[51, 1, 1, "", "ConfigType"], [52, 1, 1, "", "Handler"], [53, 1, 1, "", "JSON5Handler"], [54, 1, 1, "", "JSONHandler"], [55, 1, 1, "", "TOMLHandler"], [56, 1, 1, "", "YAMLHandler"], [57, 5, 1, "", "config_as_str_for_docstring"], [58, 5, 1, "", "init_logging_from_config_file"], [59, 5, 1, "", "load_config"], [60, 5, 1, "", "resolve_all_paths"]], "gaps.config.ConfigType": [[51, 2, 1, "", "__add__"], [51, 2, 1, "", "__mul__"], [51, 2, 1, "", "capitalize"], [51, 2, 1, "", "casefold"], [51, 2, 1, "", "center"], [51, 2, 1, "", "count"], [51, 2, 1, "", "encode"], [51, 2, 1, "", "endswith"], [51, 2, 1, "", "expandtabs"], [51, 2, 1, "", "find"], [51, 2, 1, "", "format"], [51, 2, 1, "", "format_map"], [51, 2, 1, "", "index"], [51, 2, 1, "", "isalnum"], [51, 2, 1, "", "isalpha"], [51, 2, 1, "", "isascii"], [51, 2, 1, "", "isdecimal"], [51, 2, 1, "", "isdigit"], [51, 2, 1, "", "isidentifier"], [51, 2, 1, "", "islower"], [51, 2, 1, "", "isnumeric"], [51, 2, 1, "", "isprintable"], [51, 2, 1, "", "isspace"], [51, 2, 1, "", "istitle"], [51, 2, 1, "", "isupper"], [51, 2, 1, "", "join"], [51, 2, 1, "", "ljust"], [51, 2, 1, "", "lower"], [51, 2, 1, "", "lstrip"], [51, 2, 1, "", "maketrans"], [51, 2, 1, "", "members_as_str"], [51, 2, 1, "", "partition"], [51, 2, 1, "", "removeprefix"], [51, 2, 1, "", "removesuffix"], [51, 2, 1, "", "replace"], [51, 2, 1, "", "rfind"], [51, 2, 1, "", "rindex"], [51, 2, 1, "", "rjust"], [51, 2, 1, "", "rpartition"], [51, 2, 1, "", "rsplit"], [51, 2, 1, "", "rstrip"], [51, 2, 1, "", "split"], [51, 2, 1, "", "splitlines"], [51, 2, 1, "", "startswith"], [51, 2, 1, "", "strip"], [51, 2, 1, "", "swapcase"], [51, 2, 1, "", "title"], [51, 2, 1, "", "translate"], [51, 2, 1, "", "upper"], [51, 2, 1, "", "zfill"]], "gaps.config.Handler": [[52, 3, 1, "", "FILE_EXTENSION"], [52, 2, 1, "", "dump"], [52, 2, 1, "", "dumps"], [52, 2, 1, "", "load"], [52, 2, 1, "", "loads"], [52, 2, 1, "", "write"]], "gaps.config.JSON5Handler": [[53, 2, 1, "", "dump"], [53, 2, 1, "", "dumps"], [53, 2, 1, "", "load"], [53, 2, 1, "", "loads"], [53, 2, 1, "", "write"]], "gaps.config.JSONHandler": [[54, 2, 1, "", "dump"], [54, 2, 1, "", "dumps"], [54, 2, 1, "", "load"], [54, 2, 1, "", "loads"], [54, 2, 1, "", "write"]], "gaps.config.TOMLHandler": [[55, 2, 1, "", "dump"], [55, 2, 1, "", "dumps"], [55, 2, 1, "", "load"], [55, 2, 1, "", "loads"], [55, 2, 1, "", "write"]], "gaps.config.YAMLHandler": [[56, 2, 1, "", "dump"], [56, 2, 1, "", "dumps"], [56, 2, 1, "", "load"], [56, 2, 1, "", "loads"], [56, 2, 1, "", "write"]], "gaps.exceptions": [[62, 6, 1, "", "gapsConfigError"], [63, 6, 1, "", "gapsError"], [64, 6, 1, "", "gapsExecutionError"], [65, 6, 1, "", "gapsFileNotFoundError"], [66, 6, 1, "", "gapsHPCError"], [67, 6, 1, "", "gapsIOError"], [68, 6, 1, "", "gapsIndexError"], [69, 6, 1, "", "gapsKeyError"], [70, 6, 1, "", "gapsRuntimeError"], [71, 6, 1, "", "gapsTypeError"], [72, 6, 1, "", "gapsValueError"]], "gaps.hpc": [[74, 1, 1, "", "COMMANDS"], [75, 7, 1, "", "DEFAULT_STDOUT_PATH"], [76, 1, 1, "", "HpcJobManager"], [77, 1, 1, "", "PBS"], [78, 1, 1, "", "Q_COLUMNS"], [79, 1, 1, "", "SLURM"], [80, 5, 1, "", "format_env"], [81, 5, 1, "", "format_walltime"], [82, 5, 1, "", "make_sh"], [83, 5, 1, "", "submit"]], "gaps.hpc.COMMANDS": [[74, 4, 1, "", "CANCEL"], [74, 4, 1, "", "SUBMIT"], [74, 2, 1, "", "__add__"], [74, 2, 1, "", "__mul__"], [74, 2, 1, "", "count"], [74, 2, 1, "", "index"]], "gaps.hpc.HpcJobManager": [[76, 3, 1, "", "COLUMN_HEADERS"], [76, 3, 1, "", "COMMANDS"], [76, 3, 1, "", "Q_SUBMITTED_STATUS"], [76, 2, 1, "", "cancel"], [76, 2, 1, "", "check_status_using_job_id"], [76, 2, 1, "", "check_status_using_job_name"], [76, 2, 1, "", "make_script_str"], [76, 2, 1, "", "parse_queue_str"], [76, 2, 1, "", "query_queue"], [76, 3, 1, "", "queue"], [76, 2, 1, "", "reset_query_cache"], [76, 2, 1, "", "submit"]], "gaps.hpc.PBS": [[77, 2, 1, "", "cancel"], [77, 2, 1, "", "check_status_using_job_id"], [77, 2, 1, "", "check_status_using_job_name"], [77, 2, 1, "", "make_script_str"], [77, 2, 1, "", "parse_queue_str"], [77, 2, 1, "", "query_queue"], [77, 3, 1, "", "queue"], [77, 2, 1, "", "reset_query_cache"], [77, 2, 1, "", "submit"]], "gaps.hpc.Q_COLUMNS": [[78, 4, 1, "", "ID"], [78, 4, 1, "", "NAME"], [78, 4, 1, "", "STATUS"], [78, 2, 1, "", "__add__"], [78, 2, 1, "", "__mul__"], [78, 2, 1, "", "count"], [78, 2, 1, "", "index"]], "gaps.hpc.SLURM": [[79, 2, 1, "", "cancel"], [79, 2, 1, "", "check_status_using_job_id"], [79, 2, 1, "", "check_status_using_job_name"], [79, 2, 1, "", "make_script_str"], [79, 2, 1, "", "parse_queue_str"], [79, 2, 1, "", "query_queue"], [79, 3, 1, "", "queue"], [79, 2, 1, "", "reset_query_cache"], [79, 2, 1, "", "submit"]], "gaps.legacy": [[85, 1, 1, "", "BatchJob"], [86, 1, 1, "", "HardwareStatusRetriever"], [87, 1, 1, "", "Pipeline"], [88, 6, 1, "", "PipelineError"], [89, 1, 1, "", "Status"]], "gaps.legacy.BatchJob": [[85, 3, 1, "", "PIPELINE_BACKGROUND_METHOD"], [85, 3, 1, "", "PIPELINE_CLASS"], [85, 2, 1, "", "cancel"], [85, 2, 1, "", "cancel_all"], [85, 2, 1, "", "delete"], [85, 2, 1, "", "delete_all"], [85, 3, 1, "", "job_table"], [85, 2, 1, "", "run"], [85, 3, 1, "", "sub_dirs"]], "gaps.legacy.Pipeline": [[87, 3, 1, "", "CMD_BASE"], [87, 3, 1, "", "COMMANDS"], [87, 2, 1, "", "cancel_all"], [87, 3, 1, "", "name"], [87, 2, 1, "", "run"], [87, 3, 1, "", "status"]], "gaps.legacy.Status": [[89, 2, 1, "", "add_job"], [89, 2, 1, "", "as_df"], [89, 2, 1, "", "clear"], [89, 2, 1, "", "dump"], [89, 2, 1, "", "get"], [89, 2, 1, "", "items"], [89, 2, 1, "", "job_exists"], [89, 3, 1, "", "job_hardware"], [89, 3, 1, "", "job_ids"], [89, 2, 1, "", "keys"], [89, 2, 1, "", "make_job_file"], [89, 2, 1, "", "make_single_job_file"], [89, 2, 1, "", "mark_job_as_submitted"], [89, 2, 1, "", "parse_step_status"], [89, 2, 1, "", "pop"], [89, 2, 1, "", "popitem"], [89, 2, 1, "", "record_monitor_pid"], [89, 2, 1, "", "reload"], [89, 2, 1, "", "reset_after"], [89, 2, 1, "", "retrieve_job_status"], [89, 2, 1, "", "setdefault"], [89, 2, 1, "", "step_index"], [89, 2, 1, "", "update"], [89, 2, 1, "", "update_from_all_job_files"], [89, 2, 1, "", "update_job_status"], [89, 2, 1, "", "values"]], "gaps.log": [[91, 7, 1, "", "FORMAT"], [92, 5, 1, "", "add_handlers"], [93, 5, 1, "", "init_logger"], [94, 5, 1, "", "log_mem"], [95, 5, 1, "", "log_versions"], [96, 5, 1, "", "make_handler"], [97, 5, 1, "", "make_log_file_handler"], [98, 5, 1, "", "make_log_stream_handler"], [99, 5, 1, "", "print_logging_info"], [100, 5, 1, "", "print_logging_info_all_libraries"]], "gaps.pipeline": [[102, 1, 1, "", "Pipeline"], [103, 1, 1, "", "PipelineStep"], [104, 5, 1, "", "parse_previous_status"]], "gaps.pipeline.Pipeline": [[102, 2, 1, "", "cancel_all"], [102, 3, 1, "", "name"], [102, 2, 1, "", "run"], [102, 3, 1, "", "status"]], "gaps.pipeline.PipelineStep": [[103, 3, 1, "", "command"]], "gaps.project_points": [[106, 1, 1, "", "ProjectPoints"]], "gaps.project_points.ProjectPoints": [[106, 3, 1, "", "df"], [106, 2, 1, "", "from_range"], [106, 2, 1, "", "get_sites_from_key"], [106, 3, 1, "", "gids"], [106, 2, 1, "", "index"], [106, 2, 1, "", "join_df"], [106, 3, 1, "", "sites_as_slice"], [106, 2, 1, "", "split"]], "gaps.status": [[108, 1, 1, "", "HardwareOption"], [109, 1, 1, "", "HardwareStatusRetriever"], [110, 1, 1, "", "QOSOption"], [111, 1, 1, "", "Status"], [112, 1, 1, "", "StatusField"], [113, 1, 1, "", "StatusOption"], [114, 1, 1, "", "StatusUpdates"]], "gaps.status.HardwareOption": [[108, 4, 1, "", "AWSPC"], [108, 4, 1, "", "EAGLE"], [108, 4, 1, "", "KESTREL"], [108, 4, 1, "", "LOCAL"], [108, 4, 1, "", "PEREGRINE"], [108, 4, 1, "", "SLURM"], [108, 2, 1, "", "__add__"], [108, 2, 1, "", "__mul__"], [108, 2, 1, "", "capitalize"], [108, 2, 1, "", "casefold"], [108, 2, 1, "", "center"], [108, 3, 1, "", "charge_factor"], [108, 2, 1, "", "check_status_using_job_id"], [108, 2, 1, "", "count"], [108, 2, 1, "", "encode"], [108, 2, 1, "", "endswith"], [108, 2, 1, "", "expandtabs"], [108, 2, 1, "", "find"], [108, 2, 1, "", "format"], [108, 2, 1, "", "format_map"], [108, 2, 1, "", "index"], [108, 3, 1, "", "is_hpc"], [108, 2, 1, "", "isalnum"], [108, 2, 1, "", "isalpha"], [108, 2, 1, "", "isascii"], [108, 2, 1, "", "isdecimal"], [108, 2, 1, "", "isdigit"], [108, 2, 1, "", "isidentifier"], [108, 2, 1, "", "islower"], [108, 2, 1, "", "isnumeric"], [108, 2, 1, "", "isprintable"], [108, 2, 1, "", "isspace"], [108, 2, 1, "", "istitle"], [108, 2, 1, "", "isupper"], [108, 2, 1, "", "join"], [108, 2, 1, "", "ljust"], [108, 2, 1, "", "lower"], [108, 2, 1, "", "lstrip"], [108, 2, 1, "", "maketrans"], [108, 2, 1, "", "members_as_str"], [108, 2, 1, "", "partition"], [108, 2, 1, "", "removeprefix"], [108, 2, 1, "", "removesuffix"], [108, 2, 1, "", "replace"], [108, 2, 1, "", "reset_all_cached_queries"], [108, 2, 1, "", "rfind"], [108, 2, 1, "", "rindex"], [108, 2, 1, "", "rjust"], [108, 2, 1, "", "rpartition"], [108, 2, 1, "", "rsplit"], [108, 2, 1, "", "rstrip"], [108, 2, 1, "", "split"], [108, 2, 1, "", "splitlines"], [108, 2, 1, "", "startswith"], [108, 2, 1, "", "strip"], [108, 3, 1, "", "supports_categorical_qos"], [108, 2, 1, "", "swapcase"], [108, 2, 1, "", "title"], [108, 2, 1, "", "translate"], [108, 2, 1, "", "upper"], [108, 2, 1, "", "zfill"]], "gaps.status.QOSOption": [[110, 4, 1, "", "HIGH"], [110, 4, 1, "", "NORMAL"], [110, 4, 1, "", "STANDBY"], [110, 4, 1, "", "UNSPECIFIED"], [110, 2, 1, "", "__add__"], [110, 2, 1, "", "__mul__"], [110, 2, 1, "", "capitalize"], [110, 2, 1, "", "casefold"], [110, 2, 1, "", "center"], [110, 2, 1, "", "count"], [110, 2, 1, "", "encode"], [110, 2, 1, "", "endswith"], [110, 2, 1, "", "expandtabs"], [110, 2, 1, "", "find"], [110, 2, 1, "", "format"], [110, 2, 1, "", "format_map"], [110, 2, 1, "", "index"], [110, 2, 1, "", "isalnum"], [110, 2, 1, "", "isalpha"], [110, 2, 1, "", "isascii"], [110, 2, 1, "", "isdecimal"], [110, 2, 1, "", "isdigit"], [110, 2, 1, "", "isidentifier"], [110, 2, 1, "", "islower"], [110, 2, 1, "", "isnumeric"], [110, 2, 1, "", "isprintable"], [110, 2, 1, "", "isspace"], [110, 2, 1, "", "istitle"], [110, 2, 1, "", "isupper"], [110, 2, 1, "", "join"], [110, 2, 1, "", "ljust"], [110, 2, 1, "", "lower"], [110, 2, 1, "", "lstrip"], [110, 2, 1, "", "maketrans"], [110, 2, 1, "", "members_as_str"], [110, 2, 1, "", "partition"], [110, 2, 1, "", "removeprefix"], [110, 2, 1, "", "removesuffix"], [110, 2, 1, "", "replace"], [110, 2, 1, "", "rfind"], [110, 2, 1, "", "rindex"], [110, 2, 1, "", "rjust"], [110, 2, 1, "", "rpartition"], [110, 2, 1, "", "rsplit"], [110, 2, 1, "", "rstrip"], [110, 2, 1, "", "split"], [110, 2, 1, "", "splitlines"], [110, 2, 1, "", "startswith"], [110, 2, 1, "", "strip"], [110, 2, 1, "", "swapcase"], [110, 2, 1, "", "title"], [110, 2, 1, "", "translate"], [110, 2, 1, "", "upper"], [110, 2, 1, "", "zfill"]], "gaps.status.Status": [[111, 2, 1, "", "as_df"], [111, 2, 1, "", "clear"], [111, 2, 1, "", "dump"], [111, 2, 1, "", "get"], [111, 2, 1, "", "items"], [111, 2, 1, "", "job_exists"], [111, 3, 1, "", "job_hardware"], [111, 3, 1, "", "job_ids"], [111, 2, 1, "", "keys"], [111, 2, 1, "", "make_single_job_file"], [111, 2, 1, "", "mark_job_as_submitted"], [111, 2, 1, "", "parse_step_status"], [111, 2, 1, "", "pop"], [111, 2, 1, "", "popitem"], [111, 2, 1, "", "record_monitor_pid"], [111, 2, 1, "", "reload"], [111, 2, 1, "", "reset_after"], [111, 2, 1, "", "retrieve_job_status"], [111, 2, 1, "", "setdefault"], [111, 2, 1, "", "step_index"], [111, 2, 1, "", "update"], [111, 2, 1, "", "update_from_all_job_files"], [111, 2, 1, "", "update_job_status"], [111, 2, 1, "", "values"]], "gaps.status.StatusField": [[112, 2, 1, "", "__add__"], [112, 2, 1, "", "__mul__"], [112, 2, 1, "", "capitalize"], [112, 2, 1, "", "casefold"], [112, 2, 1, "", "center"], [112, 2, 1, "", "count"], [112, 2, 1, "", "encode"], [112, 2, 1, "", "endswith"], [112, 2, 1, "", "expandtabs"], [112, 2, 1, "", "find"], [112, 2, 1, "", "format"], [112, 2, 1, "", "format_map"], [112, 2, 1, "", "index"], [112, 2, 1, "", "isalnum"], [112, 2, 1, "", "isalpha"], [112, 2, 1, "", "isascii"], [112, 2, 1, "", "isdecimal"], [112, 2, 1, "", "isdigit"], [112, 2, 1, "", "isidentifier"], [112, 2, 1, "", "islower"], [112, 2, 1, "", "isnumeric"], [112, 2, 1, "", "isprintable"], [112, 2, 1, "", "isspace"], [112, 2, 1, "", "istitle"], [112, 2, 1, "", "isupper"], [112, 2, 1, "", "join"], [112, 2, 1, "", "ljust"], [112, 2, 1, "", "lower"], [112, 2, 1, "", "lstrip"], [112, 2, 1, "", "maketrans"], [112, 2, 1, "", "members_as_str"], [112, 2, 1, "", "partition"], [112, 2, 1, "", "removeprefix"], [112, 2, 1, "", "removesuffix"], [112, 2, 1, "", "replace"], [112, 2, 1, "", "rfind"], [112, 2, 1, "", "rindex"], [112, 2, 1, "", "rjust"], [112, 2, 1, "", "rpartition"], [112, 2, 1, "", "rsplit"], [112, 2, 1, "", "rstrip"], [112, 2, 1, "", "split"], [112, 2, 1, "", "splitlines"], [112, 2, 1, "", "startswith"], [112, 2, 1, "", "strip"], [112, 2, 1, "", "swapcase"], [112, 2, 1, "", "title"], [112, 2, 1, "", "translate"], [112, 2, 1, "", "upper"], [112, 2, 1, "", "zfill"]], "gaps.status.StatusOption": [[113, 2, 1, "", "__add__"], [113, 2, 1, "", "__mul__"], [113, 2, 1, "", "capitalize"], [113, 2, 1, "", "casefold"], [113, 2, 1, "", "center"], [113, 2, 1, "", "count"], [113, 2, 1, "", "encode"], [113, 2, 1, "", "endswith"], [113, 2, 1, "", "expandtabs"], [113, 2, 1, "", "find"], [113, 2, 1, "", "format"], [113, 2, 1, "", "format_map"], [113, 2, 1, "", "index"], [113, 2, 1, "", "isalnum"], [113, 2, 1, "", "isalpha"], [113, 2, 1, "", "isascii"], [113, 2, 1, "", "isdecimal"], [113, 2, 1, "", "isdigit"], [113, 2, 1, "", "isidentifier"], [113, 2, 1, "", "islower"], [113, 2, 1, "", "isnumeric"], [113, 2, 1, "", "isprintable"], [113, 2, 1, "", "isspace"], [113, 2, 1, "", "istitle"], [113, 2, 1, "", "isupper"], [113, 2, 1, "", "join"], [113, 2, 1, "", "ljust"], [113, 2, 1, "", "lower"], [113, 2, 1, "", "lstrip"], [113, 2, 1, "", "maketrans"], [113, 2, 1, "", "members_as_str"], [113, 2, 1, "", "partition"], [113, 2, 1, "", "removeprefix"], [113, 2, 1, "", "removesuffix"], [113, 2, 1, "", "replace"], [113, 2, 1, "", "rfind"], [113, 2, 1, "", "rindex"], [113, 2, 1, "", "rjust"], [113, 2, 1, "", "rpartition"], [113, 2, 1, "", "rsplit"], [113, 2, 1, "", "rstrip"], [113, 2, 1, "", "split"], [113, 2, 1, "", "splitlines"], [113, 2, 1, "", "startswith"], [113, 2, 1, "", "strip"], [113, 2, 1, "", "swapcase"], [113, 2, 1, "", "title"], [113, 2, 1, "", "translate"], [113, 2, 1, "", "upper"], [113, 2, 1, "", "zfill"]], "gaps.utilities": [[116, 1, 1, "", "CaseInsensitiveEnum"], [117, 5, 1, "", "project_points_from_container_or_slice"], [118, 5, 1, "", "recursively_update_dict"], [119, 5, 1, "", "resolve_path"]], "gaps.utilities.CaseInsensitiveEnum": [[116, 2, 1, "", "__add__"], [116, 2, 1, "", "__mul__"], [116, 2, 1, "", "capitalize"], [116, 2, 1, "", "casefold"], [116, 2, 1, "", "center"], [116, 2, 1, "", "count"], [116, 2, 1, "", "encode"], [116, 2, 1, "", "endswith"], [116, 2, 1, "", "expandtabs"], [116, 2, 1, "", "find"], [116, 2, 1, "", "format"], [116, 2, 1, "", "format_map"], [116, 2, 1, "", "index"], [116, 2, 1, "", "isalnum"], [116, 2, 1, "", "isalpha"], [116, 2, 1, "", "isascii"], [116, 2, 1, "", "isdecimal"], [116, 2, 1, "", "isdigit"], [116, 2, 1, "", "isidentifier"], [116, 2, 1, "", "islower"], [116, 2, 1, "", "isnumeric"], [116, 2, 1, "", "isprintable"], [116, 2, 1, "", "isspace"], [116, 2, 1, "", "istitle"], [116, 2, 1, "", "isupper"], [116, 2, 1, "", "join"], [116, 2, 1, "", "ljust"], [116, 2, 1, "", "lower"], [116, 2, 1, "", "lstrip"], [116, 2, 1, "", "maketrans"], [116, 2, 1, "", "members_as_str"], [116, 2, 1, "", "partition"], [116, 2, 1, "", "removeprefix"], [116, 2, 1, "", "removesuffix"], [116, 2, 1, "", "replace"], [116, 2, 1, "", "rfind"], [116, 2, 1, "", "rindex"], [116, 2, 1, "", "rjust"], [116, 2, 1, "", "rpartition"], [116, 2, 1, "", "rsplit"], [116, 2, 1, "", "rstrip"], [116, 2, 1, "", "split"], [116, 2, 1, "", "splitlines"], [116, 2, 1, "", "startswith"], [116, 2, 1, "", "strip"], [116, 2, 1, "", "swapcase"], [116, 2, 1, "", "title"], [116, 2, 1, "", "translate"], [116, 2, 1, "", "upper"], [116, 2, 1, "", "zfill"]], "gaps.warn": [[121, 6, 1, "", "gapsCollectionWarning"], [122, 6, 1, "", "gapsDeprecationWarning"], [123, 6, 1, "", "gapsHPCWarning"], [124, 6, 1, "", "gapsWarning"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function", "6": "py:exception", "7": "py:data"}, "terms": {"": [11, 15, 16, 31, 32, 46, 51, 76, 77, 79, 89, 91, 93, 96, 106, 108, 110, 111, 112, 113, 116, 126, 127, 130, 131, 132], "0": [3, 44, 45, 74, 78, 130, 131], "00": 131, "0000": [51, 108, 110, 112, 113, 116], "007f": [51, 108, 110, 112, 113, 116], "05": 131, "06": 131, "08": 131, "1": [3, 15, 16, 51, 74, 78, 108, 110, 112, 113, 116, 130, 131], "10": [128, 131], "100": [106, 126, 127, 130, 131], "1000": 130, "11": 131, "110": 131, "110hh": 131, "110hh_wtrd145": 131, "110hh_wtrd170": 131, "110m": 131, "115": 131, "11578": 128, "115m": 131, "12": [57, 131], "120": 131, "120hh_wtrd160": 131, "120m": 131, "125": 131, "125m": 131, "13": [131, 132], "130": 131, "130m": 131, "140": 131, "140m": 131, "145": 131, "145m": 131, "15": 131, "150": 131, "150m": 131, "154m": 131, "155": 131, "155m": 131, "16": 131, "160": 131, "160m": 131, "170": 131, "170m": 131, "175": 131, "175m": 131, "1800": 131, "19": 132, "190": 131, "190m": 131, "2": [3, 15, 16, 31, 78, 89, 106, 111, 130, 131], "20": 131, "200": 131, "200m": 131, "2023": 128, "20230426": 128, "24core": 77, "2d": 44, "2x": 79, "3": [15, 16, 18, 51, 108, 110, 112, 113, 116, 130, 131, 132], "36": 131, "3630774": 100, "4": [15, 16, 77, 79, 130, 131], "5": [130, 131], "6": [130, 131], "7": [44, 45, 128, 131], "8": [51, 108, 110, 112, 113, 116, 131], "9223372036854775807": [3, 74, 78], "A": [8, 9, 15, 16, 20, 21, 23, 32, 35, 40, 42, 51, 57, 87, 89, 96, 102, 103, 106, 108, 110, 111, 112, 113, 114, 116, 117, 126, 127, 131], "As": [126, 127, 130, 131], "At": [15, 16, 131], "By": [9, 11, 15, 16, 23, 31, 44, 45, 46, 57, 58, 59, 76, 77, 79, 80, 81, 86, 87, 89, 93, 96, 102, 104, 106, 109, 111, 130, 131], "For": [15, 16, 32, 104, 126, 127, 130, 131], "IF": 131, "If": [11, 15, 16, 20, 21, 23, 25, 31, 32, 44, 45, 46, 51, 58, 59, 76, 77, 79, 85, 87, 89, 93, 97, 102, 104, 106, 108, 110, 111, 112, 113, 114, 116, 117, 119, 126, 127, 130, 131, 132], "In": [15, 16, 51, 57, 89, 108, 110, 111, 112, 113, 116, 126, 127, 128, 130, 131, 132], "It": [15, 16, 32, 130, 131, 132], "NOT": [15, 16, 44, 89, 104, 111, 128], "ON": 131, "On": 130, "One": [131, 132], "Such": [126, 127], "The": [15, 16, 23, 51, 58, 85, 87, 89, 106, 108, 110, 111, 112, 113, 114, 116, 119, 126, 127, 128, 129, 130, 132], "Then": 130, "There": [126, 127, 131], "These": [15, 16, 25, 126, 127, 130, 131], "To": [15, 16, 31, 32, 85, 126, 127, 128, 130, 131], "WILL": [15, 16, 44], "With": [51, 108, 110, 112, 113, 116, 126, 127, 130], "_": [15, 16, 126, 127, 130], "__add__": [3, 51, 74, 78, 108, 110, 112, 113, 116], "__file__": [126, 127], "__getitem__": [51, 108, 110, 112, 113, 116], "__init__": [15, 87, 126, 127, 130], "__main__": [126, 127, 130], "__mul__": [3, 51, 74, 78, 108, 110, 112, 113, 116], "__name__": [126, 127, 130], "_build": [126, 127], "_cmd": 37, "_config": 87, "_configtyp": 51, "_df": 106, "_init_statu": 87, "_out_path": 11, "_pattern": 11, "_run_list": 87, "ab": [51, 108, 110, 112, 113, 116], "abc": [13, 52, 76], "abl": [15, 16], "abnorm": [89, 111], "about": [9, 11, 44, 126, 127, 130, 131], "abov": [15, 16, 85, 126, 127, 130, 131], "absolut": 119, "abstract": [13, 52, 76, 85, 87], "abstractbaseclicommandconfigur": [8, 15, 16], "accept": [15, 16], "access": 130, "accommod": 130, "accord": [106, 126, 127], "account": [77, 79], "achiev": [15, 16, 130, 131], "across": [9, 11, 13, 15, 16, 23, 43, 126, 127, 128, 130, 131, 132], "act": 15, "action": [58, 131], "activ": [77, 79, 80, 131, 132], "actual": 131, "ad": [15, 16, 23, 57, 114, 126, 127, 128, 130, 131], "add": [15, 16, 44, 57, 89, 92, 93, 96, 97, 98, 106, 118, 128, 130, 131], "add_collect": [13, 15, 16, 130], "add_dataset": 44, "add_job": 89, "addit": [15, 16, 79, 126, 127, 128, 130, 131], "addition": 130, "address": [130, 131], "adher": [126, 127], "advanc": 129, "advantag": 106, "advis": 130, "advisor": 128, "affect": 130, "after": [21, 51, 57, 83, 89, 108, 110, 111, 112, 113, 116, 126, 127, 131, 132], "afterward": [126, 127], "again": [76, 77, 79, 126, 127, 131], "aggreg": 131, "alia": [3, 74, 78], "align": 130, "all": [2, 11, 15, 16, 18, 23, 44, 45, 46, 51, 76, 77, 79, 85, 87, 89, 93, 100, 102, 104, 108, 110, 111, 112, 113, 116, 126, 127, 130, 131, 132], "alloc": [77, 79, 131], "allow": [2, 9, 15, 16, 31, 58, 126, 127, 130, 131, 132], "alon": [126, 127], "along": [15, 93, 126, 127, 130, 131], "alongsid": 130, "alpha": [51, 108, 110, 112, 113, 116], "alphabet": [51, 108, 110, 112, 113, 116], "alreadi": [31, 44, 92, 131], "also": [11, 15, 16, 87, 89, 93, 106, 111, 114, 130, 131], "altern": [15, 16, 126, 127, 130, 131], "although": 131, "alwai": [15, 16, 32, 126, 127, 131], "amount": 130, "an": [13, 15, 16, 21, 27, 44, 51, 76, 77, 79, 80, 81, 83, 89, 106, 108, 110, 111, 112, 113, 114, 116, 126, 127, 130, 131, 132], "analys": 131, "analysi": [27, 106, 128, 130, 131], "analysis_year": 131, "analyst": [128, 131], "analyz": 131, "ani": [9, 11, 15, 16, 18, 44, 51, 89, 108, 110, 111, 112, 113, 116, 119, 126, 127, 128, 130, 131], "anoth": [114, 130, 131], "another_model": 130, "anywai": 130, "anywher": 130, "api": 130, "appeal": 130, "appear": [18, 130], "append": 130, "appli": [93, 118, 131], "applic": [11, 44, 126, 127, 132], "approach": [130, 131], "appropri": [39, 126, 127, 130], "approv": [126, 127], "ar": [2, 11, 15, 16, 18, 23, 25, 31, 32, 44, 45, 46, 49, 51, 58, 85, 89, 93, 106, 108, 110, 111, 112, 113, 116, 119, 126, 127, 130, 131, 132], "architectur": 101, "arg": [51, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 104, 108, 110, 112, 113, 116, 121, 122, 123, 124, 130, 131], "arg_combo": 3, "argument": [9, 15, 16, 20, 21, 25, 32, 51, 58, 76, 77, 79, 85, 89, 104, 106, 108, 110, 111, 112, 113, 116, 130, 131], "around": 9, "arrai": [48, 126, 127, 130], "as_complet": 130, "as_df": [89, 111], "ascii": [51, 108, 110, 112, 113, 116], "ask": [126, 127], "aspect": 130, "assign": [89, 111, 130], "assist": [128, 130, 131], "associ": [106, 130], "assum": [15, 16, 44, 45, 51, 108, 110, 112, 113, 116, 119, 130, 131, 132], "attr": [11, 44, 89, 111, 130], "attribut": [2, 3, 11, 13, 15, 16, 23, 25, 44, 45, 50, 51, 52, 53, 54, 55, 56, 73, 74, 76, 77, 78, 79, 85, 87, 89, 90, 102, 103, 106, 108, 110, 111, 112, 113, 114], "au": 108, "author": 128, "autom": 131, "automat": [11, 15, 16, 31, 126, 127, 128, 130], "auxiliari": [15, 16], "avail": [51, 126, 127, 130, 131, 132], "avoid": [11, 13, 15, 16, 86, 89, 109, 111, 130, 131], "aw": 108, "awai": 131, "awar": 131, "awspc": 108, "b": [15, 16, 18, 130], "back": 131, "background": [2, 27, 58, 83, 85, 131], "background_stdout": 83, "backup": [89, 111], "bad": [126, 127], "bare": 131, "base": [1, 2, 3, 9, 13, 15, 16, 23, 29, 33, 43, 44, 45, 51, 52, 53, 54, 55, 56, 60, 74, 76, 77, 78, 79, 85, 86, 87, 89, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 116, 119, 126, 127, 130, 131], "base_dir": [60, 119], "bash": 131, "basic": [128, 129], "batch": [77, 85, 129, 130], "batch_job": 131, "becaus": [23, 89, 111, 130, 131], "becom": [130, 131], "been": [11, 15, 16, 44, 51, 108, 110, 112, 113, 116, 131], "befor": [15, 16, 21, 51, 77, 79, 97, 104, 108, 110, 112, 113, 114, 116, 118, 126, 127, 130, 131], "begin": [130, 131], "behavior": [126, 127, 130, 132], "being": [11, 15, 16, 23, 25, 31, 44, 45, 86, 87, 89, 114, 130], "believ": [126, 127], "belong": [89, 111, 131], "below": [15, 16, 126, 127, 130, 131, 132], "benefici": 130, "bespok": 131, "best": [104, 131], "between": [51, 108, 110, 112, 113, 116, 126, 127, 130, 131], "bias_correct": 131, "big_brown_bat": 131, "bin": 132, "block": [15, 16, 23, 126, 127, 130, 131], "blog": [126, 127], "bodi": 119, "bool": [2, 11, 13, 15, 16, 20, 21, 23, 39, 44, 45, 58, 59, 76, 77, 79, 83, 85, 87, 89, 93, 102, 108, 111], "born": 128, "borrow": 90, "both": [15, 126, 127, 130, 131], "boundari": [51, 108, 110, 112, 113, 116], "box": 130, "brace": [51, 108, 110, 112, 113, 116], "branch": [126, 127, 132], "brand": 130, "break": [51, 76, 77, 79, 108, 110, 112, 113, 116, 130], "briefli": [126, 127], "broadcast": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 121, 122, 123, 124], "browser": [126, 127], "bug": [126, 127, 132], "build": [2, 126, 127, 130], "built": [126, 127, 130], "buster": 128, "byproduct": 11, "c": [18, 130, 131], "cach": [76, 77, 79, 86, 89, 108, 109, 111], "calcul": [15, 16, 130], "call": [9, 15, 16, 51, 87, 93, 96, 103, 104, 108, 110, 112, 113, 116, 119, 126, 127, 130, 131], "callabl": [15, 16, 20, 21, 23, 85, 96], "can": [2, 9, 11, 15, 16, 18, 31, 33, 51, 76, 77, 79, 85, 86, 89, 93, 106, 108, 109, 110, 111, 112, 113, 116, 126, 127, 128, 130, 131, 132], "cancel": [2, 27, 74, 76, 77, 79, 85, 87, 102], "cancel_al": [85, 87, 102], "cannot": 130, "capabl": [15, 16, 128], "capit": [51, 108, 110, 112, 113, 116], "captur": [2, 83, 85, 93, 126, 127, 130, 131], "care": [58, 130, 131], "case": [15, 16, 51, 89, 108, 110, 111, 112, 113, 114, 116, 126, 127, 130, 131, 132], "casefold": [51, 108, 110, 112, 113, 116], "caseinsensitiveenum": [108, 110, 112, 113], "caseless": [51, 108, 110, 112, 113, 116], "cat": 131, "catch": [126, 127], "categor": [108, 131], "cater": 128, "caveat": 131, "cd": [131, 132], "center": [51, 108, 110, 112, 113, 116], "cf_mean": 131, "challeng": 131, "chanc": [126, 127, 130], "chang": [126, 127, 131, 132], "char": [51, 108, 110, 112, 113, 116], "charact": [51, 108, 110, 112, 113, 116], "charg": [79, 108], "charge_factor": 108, "check": [23, 44, 76, 77, 79, 86, 89, 104, 108, 109, 111, 126, 127, 130, 131], "check_hardwar": [89, 111], "check_status_using_job_id": [76, 77, 79, 108], "check_status_using_job_nam": [76, 77, 79], "choos": [126, 127, 130, 131], "chunk": [44, 130], "chunk_fil": 44, "clash": [15, 16], "class": [1, 2, 3, 8, 12, 13, 15, 16, 22, 23, 43, 44, 45, 50, 51, 52, 53, 54, 55, 56, 73, 74, 76, 77, 78, 79, 84, 85, 86, 87, 89, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 126, 127, 130], "classmethod": [44, 45, 51, 52, 53, 54, 55, 56, 76, 77, 79, 85, 87, 89, 102, 106, 108, 110, 111, 112, 113, 116], "clean": 131, "clear": [2, 85, 89, 111], "cli": [85, 87, 104, 126, 127, 128, 130, 131], "cli_gen": [77, 79], "click": [8, 9, 15, 16, 25, 130], "clicommandfromclass": [8, 9, 126, 127, 130], "clicommandfromfunct": [8, 9, 14, 130], "clobber": [11, 44, 131], "clone": [126, 127, 132], "closer": 130, "cluster": 108, "cmd": [25, 32, 77, 79, 83, 131], "cmd_base": 87, "code": [51, 90, 108, 110, 112, 113, 116, 126, 127, 128, 130, 132], "codebas": [126, 127], "codec": [51, 108, 110, 112, 113, 116], "coher": [126, 127], "collect": [9, 15, 16, 21, 31, 37, 89, 104, 108, 110, 111, 112, 113, 121, 126, 127, 130, 131], "collect_dataset": 45, "collect_pattern": [15, 16, 31, 44, 46, 131], "collector": 45, "column": [76, 77, 79, 106, 130, 131], "column_head": 76, "com": [100, 132], "combin": [2, 15, 16, 44, 45, 89, 111, 114, 130, 131], "combine_meta": 44, "combine_time_index": 44, "come": 131, "command": [6, 8, 9, 11, 17, 19, 23, 25, 28, 29, 31, 32, 34, 35, 37, 40, 41, 42, 44, 76, 77, 79, 83, 85, 87, 89, 103, 104, 111, 126, 127, 128, 129, 131], "command_config": [8, 19], "command_help": 23, "command_nam": [11, 15, 16, 23, 25, 31, 44], "commanddocument": [13, 15, 16], "comment": 131, "commit": [126, 127], "common": 131, "commonli": 131, "compar": [126, 127, 130, 131, 132], "comparison": [51, 108, 110, 112, 113, 116], "compat": 130, "compil": [20, 23], "complet": [128, 130, 131], "complic": 131, "compon": [119, 130], "compris": 23, "comput": [128, 130], "concaten": [51, 108, 110, 112, 113, 116], "concentr": 131, "concept": 131, "concurr": 130, "conda": [77, 79, 80, 126, 127, 132], "conda_env": [77, 79, 80, 131], "condit": 130, "conduct": [130, 131], "config": [2, 9, 11, 15, 16, 23, 29, 30, 31, 32, 33, 34, 41, 42, 44, 85, 87, 102, 103, 119, 129, 130], "config_analyz": 131, "config_batch": 131, "config_bespok": 131, "config_collect": 131, "config_econ": 131, "config_fil": [11, 15, 16, 19, 27, 44, 58], "config_filepath": 59, "config_gen": 131, "config_gener": 131, "config_generation_again": 131, "config_help": 23, "config_hybrid": 131, "config_multi_year": 131, "config_nrw": 131, "config_pipelin": 131, "config_preprocessor": [13, 14, 15, 16, 130], "config_qa_qc": 131, "config_rep_profil": 131, "config_runn": 130, "config_script": 131, "config_setup": 131, "config_str": [52, 53, 54, 55, 56], "config_supply_curv": 131, "config_supply_curve_aggreg": 131, "config_typ": 57, "configerror": 62, "configtyp": 57, "configur": [2, 8, 9, 12, 15, 16, 23, 52, 57, 59, 100, 106, 128, 130, 131], "conform": [15, 16, 57], "congratul": 130, "consequ": [130, 131], "consid": [51, 108, 110, 112, 113, 116, 126, 127, 130], "consist": [15, 16, 126, 127, 131], "console_script": 130, "consolid": [130, 131], "constantli": [86, 89, 109, 111], "construct": 130, "consult": 131, "consum": 130, "contain": [9, 11, 15, 16, 20, 21, 25, 39, 44, 46, 51, 57, 58, 59, 60, 87, 89, 104, 106, 108, 110, 111, 112, 113, 114, 116, 117, 119, 126, 127, 130, 131], "content": [52, 53, 54, 55, 56, 82, 106, 131], "context": [25, 114, 130], "continu": [2, 85, 87, 102, 131], "contribut": 128, "control": [15, 16, 23, 126, 127, 131, 132], "conu": 128, "conveni": [15, 16, 126, 127, 131], "convent": [15, 16, 126, 127], "convers": 131, "convert": [8, 9, 15, 16, 18, 48, 51, 52, 53, 54, 55, 56, 57, 108, 110, 112, 113, 116], "coordin": [126, 127], "copi": [44, 45, 51, 108, 110, 112, 113, 116, 118, 126, 127, 130, 131], "core": [126, 127, 130, 131], "corpor": 128, "correct": 132, "correctli": [89, 111, 131], "correspond": [2, 9, 11, 15, 31, 44, 45, 48, 87, 89, 102, 111, 130, 131], "could": [130, 132], "couldn": 132, "count": [3, 51, 74, 78, 108, 110, 112, 113, 116], "coupl": 130, "cover": [126, 127, 130], "cpu": 130, "creat": [2, 3, 9, 74, 78, 82, 89, 96, 97, 106, 111, 126, 127, 130, 131, 132], "criteria": 131, "critic": [126, 127, 130], "crucial": [126, 127, 130], "csv": [2, 11, 85, 106, 129, 130], "ctx": [19, 25, 27], "cumbersom": 131, "current": [60, 104, 119, 126, 127, 131, 132], "curtail": 131, "curv": 131, "custom": [61, 120, 129, 130], "d": [18, 89, 91, 93, 96, 111], "danger": 131, "dash": [15, 16], "data": [11, 44, 45, 48, 51, 52, 53, 54, 55, 56, 86, 89, 106, 108, 109, 110, 111, 112, 113, 116, 118, 126, 127, 130, 131], "datafram": [2, 44, 48, 49, 85, 89, 106, 111, 117, 130], "dataset": [11, 15, 16, 43, 44, 45, 130, 131], "dataset_in": [44, 45], "dataset_nam": 44, "dataset_out": [44, 45], "dc": 128, "deal": 131, "debug": [15, 16, 20, 21, 77, 79, 85, 87, 94, 130, 131], "decim": [51, 108, 110, 112, 113, 116], "decis": [126, 127], "decod": 83, "dedic": 130, "deep": 60, "def": [51, 108, 110, 112, 113, 116, 126, 127, 130], "default": [9, 11, 15, 16, 23, 31, 44, 45, 46, 51, 57, 58, 59, 75, 76, 77, 79, 80, 81, 86, 87, 89, 91, 93, 96, 102, 104, 106, 108, 109, 110, 111, 112, 113, 116, 126, 127, 130, 131], "default_exec_valu": 23, "default_stdout_path": [77, 79], "defin": [126, 127, 130, 131], "definit": 23, "deleg": [119, 130], "delet": [2, 11, 44, 51, 85, 108, 110, 112, 113, 116, 131], "delete_al": 85, "delimit": [51, 76, 77, 79, 108, 110, 112, 113, 116], "delin": [89, 111], "demand": 130, "demonstr": [130, 131], "depend": [79, 130, 131, 132], "deprec": [14, 122], "depth": 128, "describ": [15, 16, 126, 127, 130, 131], "descript": [9, 131], "design": [126, 127, 128, 130], "desir": [117, 130, 131], "detach": 131, "detail": [126, 127, 130, 131], "detect": [126, 127], "determin": [13, 15, 16, 130, 131], "dev": [126, 127, 131, 132], "develop": [15, 16, 128, 130], "df": [106, 130], "df2": 106, "diamet": 130, "dict": [9, 20, 21, 23, 25, 31, 32, 33, 57, 59, 60, 76, 77, 79, 87, 89, 106, 111, 114, 117, 118, 131], "dictionari": [9, 15, 16, 20, 21, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 76, 77, 79, 87, 89, 108, 110, 111, 112, 113, 114, 116, 118, 130, 131], "did": [126, 127, 131], "differ": [15, 16, 94, 104, 126, 127, 131, 132], "digit": [51, 108, 110, 112, 113, 116], "direct": [126, 127], "directli": [15, 16, 130, 131], "directori": [2, 11, 15, 16, 20, 21, 25, 31, 32, 39, 44, 59, 60, 75, 85, 87, 89, 97, 102, 104, 111, 114, 119, 130, 131, 132], "dirout": 87, "disabl": 58, "discard": [51, 108, 110, 112, 113, 116], "disconnect": 131, "discuss": [15, 16, 126, 127, 130], "disk": [11, 76, 77, 79, 89, 111], "disown": 131, "dispatch": 130, "displai": [9, 15, 16, 39, 130, 131], "distribut": [9, 15, 16, 17, 128, 130, 131], "dive": 128, "divid": 130, "do": [14, 15, 16, 77, 79, 92, 119, 126, 127, 130, 131], "doc": [23, 126, 127], "docstr": [15, 16, 57, 126, 127, 128, 130], "document": [0, 9, 13, 15, 16, 130, 131], "doe": [15, 16, 44, 89, 97, 104, 106, 111, 126, 127, 128, 130, 131], "doesn": [31, 83], "doi": 128, "don": [130, 131, 132], "done": [51, 108, 110, 112, 113, 116], "doubl": [18, 131], "down": 130, "download": 32, "downstream": [126, 127], "drop_leap": 131, "dry": 131, "dry_run": [2, 85], "dset": 131, "dtype": 130, "dump": [18, 52, 53, 54, 55, 56, 89, 111], "duplic": [15, 16, 45, 104, 129], "duplicate_gid": 45, "dure": [87, 114, 130], "e": [8, 11, 15, 16, 18, 31, 44, 46, 85, 89, 104, 111, 117, 126, 127, 128, 130, 131, 132], "each": [2, 9, 31, 32, 51, 57, 87, 106, 108, 110, 112, 113, 116, 130, 131], "eagl": [86, 87, 89, 108], "earlier": 131, "easi": [15, 16, 128], "easier": [126, 127, 131, 132], "easili": [15, 16, 126, 127, 132], "econ": 131, "effect": [106, 130, 131], "effici": 131, "effort": 128, "either": [89, 106, 111, 119, 126, 127], "element": 31, "elimin": 119, "els": [89, 111], "embarrassingli": 128, "emphas": 130, "emploi": [126, 127, 130], "empti": [15, 16, 51, 76, 77, 79, 80, 81, 83, 89, 104, 106, 108, 110, 111, 112, 113, 116, 130], "enabl": [130, 131], "enclos": 131, "encod": [51, 108, 110, 112, 113, 116], "encount": 132, "encourag": [15, 16], "end": [15, 16, 46, 51, 59, 106, 108, 110, 112, 113, 114, 116, 126, 127, 128, 131], "endswith": [51, 108, 110, 112, 113, 116], "engin": 128, "enhanc": [126, 127], "ensur": [15, 16, 92, 104, 126, 127, 130, 131], "enter": 114, "entir": [130, 131], "entri": [5, 7, 10, 26, 130], "entry_point": 130, "entrypoint": 9, "enum": [51, 52, 108, 110, 112, 113, 116], "enumer": [51, 57], "env": 132, "env_str": 80, "environ": [77, 79, 80, 132], "equal": [15, 16, 51, 106, 108, 110, 112, 113, 116], "equival": [15, 16, 130], "err": [76, 77, 79, 131], "error": [51, 61, 63, 76, 77, 79, 83, 88, 89, 104, 108, 110, 111, 112, 113, 116, 130, 131, 132], "especi": 130, "essenti": [18, 130, 131], "establish": [126, 127], "etc": [8, 18, 21, 77, 104, 117, 126, 127, 131, 132], "even": [119, 131], "everi": [126, 127, 131], "everyth": 130, "ex": 130, "exact": 130, "exactli": [85, 131], "examin": 131, "exampl": [15, 16, 18, 32, 51, 77, 79, 108, 110, 112, 113, 116, 126, 127, 128, 130, 131, 132], "exceed": 130, "excel": 130, "except": [84, 88, 114, 120, 121, 122, 123, 124, 126, 127, 130, 131], "exclud": [15, 16, 21, 23, 130, 131], "exclus": [130, 131], "exec_control_doc": 23, "exec_kwarg": 25, "execut": [9, 13, 15, 16, 21, 23, 27, 32, 37, 73, 77, 79, 82, 87, 88, 102, 108, 126, 127, 128, 129, 130], "execution_control": [15, 16, 23, 130, 131], "executionerror": 64, "exist": [11, 31, 44, 46, 89, 92, 97, 104, 106, 111, 118, 126, 127, 131], "exit": [114, 130, 131], "expand": [51, 108, 110, 112, 113, 116, 130, 131], "expandtab": [51, 108, 110, 112, 113, 116], "expect": [15, 16, 58, 126, 127, 128, 130], "explicit": 131, "explicitli": [23, 131], "explor": 130, "expos": [15, 16, 130], "express": [51, 108, 110, 112, 113, 116], "extend": [15, 16, 23, 32, 131], "extended_summari": 23, "extens": [15, 16, 126, 127, 130, 131], "extent": 128, "extern": [126, 127, 128], "extra": [23, 25, 39, 57, 76, 77, 79, 130, 131], "extract": [15, 16, 44, 47, 48, 49], "extrem": [126, 127, 130], "exxonmobil": 128, "f": [15, 16, 51, 89, 108, 110, 111, 112, 113, 116, 130], "face": [15, 16], "facilit": 111, "factor": 108, "factori": 96, "fail": [114, 126, 127, 131], "failur": [51, 88, 89, 108, 110, 111, 112, 113, 116], "fallback": 108, "fals": [2, 11, 13, 15, 16, 18, 23, 27, 44, 45, 51, 58, 76, 77, 79, 83, 85, 87, 89, 108, 110, 111, 112, 113, 116, 130, 131], "familiar": 131, "fast": [126, 127], "favorit": [126, 127], "fcr": 131, "feasibl": [130, 131], "featur": [15, 16, 76, 77, 79, 126, 127, 128, 131, 132], "feel": 130, "few": [130, 131], "fh": 130, "field": [3, 51, 74, 78, 108, 110, 112, 113, 116], "fifteen": 131, "figur": [126, 127], "file": [2, 11, 15, 16, 19, 20, 21, 23, 31, 32, 37, 39, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 75, 77, 79, 82, 83, 85, 87, 89, 93, 97, 98, 102, 104, 106, 111, 112, 114, 119, 128, 130, 131], "file_extens": 52, "file_nam": [52, 53, 54, 55, 56], "file_path": 97, "file_set": 3, "fileconfig": 100, "filehandl": [93, 97], "filenam": [15, 16, 31, 91, 93, 96, 131], "filenotfounderror": 65, "filepath": [15, 16, 31, 44, 45, 46, 87, 93], "fill": [15, 16, 51, 108, 110, 112, 113, 116, 131], "fillchar": [51, 108, 110, 112, 113, 116], "filter": [25, 131], "final": [130, 131], "find": [51, 108, 110, 112, 113, 116, 130, 131, 132], "finer": 131, "finish": [104, 131], "firefox": [126, 127], "first": [3, 15, 16, 21, 23, 31, 44, 51, 74, 78, 85, 108, 110, 112, 113, 116, 126, 127, 130, 131], "firstli": 131, "five": 131, "fix": [106, 126, 127], "fixed_charge_r": 131, "flag": [2, 11, 15, 16, 20, 21, 23, 44, 45, 58, 79, 83, 85, 87, 89, 102, 111, 130, 131], "flat": [89, 111], "flexibl": [126, 127], "float": [44, 45, 77, 79, 81, 106, 131], "float32": 130, "fmt": [93, 96], "fname": 82, "focu": 131, "folder": [2, 39, 85, 130, 131], "follow": [15, 16, 20, 21, 25, 51, 85, 87, 89, 108, 110, 111, 112, 113, 116, 126, 127, 130, 131], "footprint": 130, "forc": [89, 111], "forget": [130, 131], "form": [15, 16, 23, 25], "format": [15, 16, 18, 51, 57, 76, 77, 79, 81, 89, 93, 96, 108, 110, 111, 112, 113, 116, 126, 127, 130], "format_map": [51, 108, 110, 112, 113, 116], "formatt": [85, 87, 126, 127], "fortun": 130, "found": [51, 58, 76, 77, 79, 89, 104, 106, 108, 110, 111, 112, 113, 116], "four": 131, "fraction": [44, 45], "framework": [1, 2, 76, 85, 87, 102, 128, 130], "free": [126, 127, 130], "freedom": 130, "from": [2, 8, 11, 15, 16, 19, 21, 23, 25, 31, 32, 39, 44, 45, 47, 48, 49, 51, 60, 76, 77, 79, 83, 85, 89, 90, 100, 104, 106, 108, 110, 111, 112, 113, 116, 118, 119, 126, 127, 128, 130, 131], "from_rang": 106, "front": [51, 108, 110, 112, 113, 116], "full": [11, 44, 126, 127, 128, 130, 131, 132], "func": [23, 126, 127], "function": [4, 5, 7, 9, 10, 12, 13, 14, 15, 16, 17, 20, 21, 23, 24, 25, 26, 30, 34, 36, 38, 39, 41, 43, 44, 50, 73, 76, 77, 79, 85, 90, 93, 96, 101, 104, 106, 114, 115, 119, 126, 127, 128, 130, 131], "further": [58, 131], "futur": [126, 127, 130, 131], "g": [18, 85, 117, 126, 127, 128, 130, 131, 132], "gap": 129, "gapscollectionwarn": 44, "gapsconfigerror": [25, 102], "gapserror": [126, 127], "gapskeyerror": 104, "gapsruntimeerror": 46, "gapsvalueerror": [59, 126, 127], "gapswarn": [126, 127], "gather": [130, 131], "gb": [77, 79, 130], "gener": [6, 8, 9, 11, 15, 16, 23, 28, 29, 31, 34, 41, 42, 57, 63, 76, 77, 79, 124, 126, 127, 128, 129, 130], "geospati": [15, 16, 128, 130, 131], "get": [9, 76, 77, 79, 80, 81, 89, 106, 111, 126, 127, 128, 129, 130, 132], "get_dataset_shap": 44, "get_sites_from_kei": 106, "getlogg": 130, "getpass": [76, 77, 79], "getus": [76, 77, 79], "gid": [11, 44, 45, 47, 49, 106, 117, 130, 131], "gid_map": 131, "git": 132, "github": [126, 127, 132], "give": [126, 127, 130, 131], "given": [13, 15, 16, 44, 51, 76, 77, 79, 89, 108, 110, 111, 112, 113, 114, 116, 130, 131], "go": [126, 127], "goal": 130, "goe": 131, "good": [126, 127, 130, 131], "gov": [126, 127, 130, 131], "grant": 128, "graph_object": [126, 127], "great": 131, "group": [9, 106, 131], "guid": 131, "h": 77, "h5": [31, 44, 46, 47, 130, 131], "h5_dir": 44, "h5_file": [44, 45, 47, 48], "h5py": 130, "ha": [15, 16, 51, 59, 89, 108, 110, 111, 112, 113, 116, 130, 131, 132], "had": 130, "hand": [130, 131], "handl": [43, 51, 108, 110, 112, 113, 116], "handler": [53, 54, 55, 56, 92, 93, 96, 97, 98, 99, 100], "happi": [126, 127, 131], "hardwar": [76, 77, 79, 86, 87, 89, 108, 109, 111, 126, 127, 131, 132], "hardware_status_retriev": [89, 111], "hardwarestatusretriev": [89, 111], "have": [11, 15, 16, 23, 31, 33, 44, 45, 51, 87, 89, 104, 108, 110, 111, 112, 113, 116, 126, 127, 128, 130, 131, 132], "haven": [126, 127], "hdf5": [11, 15, 16, 31, 37, 44, 46, 48, 130, 131], "header": 76, "health": [89, 111], "height": [130, 131], "heighten": 131, "help": [9, 11, 15, 16, 23, 126, 127, 130, 131], "helper": 13, "here": [130, 131], "hh": [81, 131], "hi": 18, "hidden": 129, "hide": 130, "high": [79, 110, 128], "highest": [51, 108, 110, 112, 113, 116], "highli": 132, "hold": 117, "hook": [126, 127], "hour": [77, 79, 81, 108, 131], "how": [18, 44, 45, 89, 126, 127, 129], "howev": [15, 16, 128, 130, 131], "hpc": [9, 15, 16, 32, 86, 89, 104, 108, 109, 111, 123, 128, 130, 131], "hpc_parameter_help": 23, "hpcerror": 66, "hpcjobmanag": [77, 79], "html": [126, 127], "http": [32, 100, 128, 132], "hub": [130, 131], "hundr": 131, "hybrid": 131, "i": [3, 8, 9, 11, 13, 15, 16, 18, 20, 21, 23, 25, 31, 32, 44, 45, 46, 48, 51, 57, 58, 74, 76, 77, 78, 79, 83, 85, 86, 87, 89, 90, 97, 104, 106, 108, 110, 111, 112, 113, 114, 116, 118, 119, 126, 127, 130, 131, 132], "id": [76, 77, 78, 79, 89, 108, 111], "idea": 129, "ideal": [126, 127, 131], "ident": [44, 45], "identif": [89, 111], "identifi": [15, 16, 51, 108, 110, 112, 113, 116, 130], "ignor": [11, 44, 46, 51, 108, 110, 112, 113, 116, 131], "iloc": 106, "immedi": [15, 16, 130], "implement": [13, 15, 16, 51, 108, 110, 112, 113, 116, 126, 127, 128, 130], "import": [23, 130, 131, 132], "importantli": [18, 131], "impos": 130, "impract": 131, "includ": [9, 15, 16, 23, 31, 39, 51, 77, 89, 106, 108, 110, 111, 112, 113, 116, 126, 127, 128, 130, 131], "include_col": [89, 111], "inconsider": 130, "inconsist": [126, 127], "incorpor": 130, "increasingli": 131, "ind": [106, 130], "index": [3, 44, 51, 74, 78, 89, 104, 106, 108, 110, 111, 112, 113, 116, 126, 127, 130], "index_nam": [89, 111], "indexerror": 68, "indic": [15, 16, 23, 106], "individu": [15, 16, 89, 111, 131], "ineffici": [32, 130, 131], "infer": 31, "info": [9, 20, 21, 76, 77, 79, 93, 94, 96, 100, 106, 130, 131], "inform": [11, 15, 16, 44, 89, 111, 126, 127, 130, 131], "inherit": 8, "init": [15, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 87, 121, 122, 123, 124], "init_h5": 130, "init_logg": 58, "initi": [15, 21, 23, 33, 58, 86, 87, 89, 93, 97, 106, 109, 111, 114, 126, 127, 130, 131], "input": [2, 9, 11, 15, 16, 18, 20, 21, 23, 25, 31, 32, 33, 44, 45, 46, 57, 58, 59, 60, 77, 79, 86, 89, 94, 104, 106, 109, 111, 117, 119, 130, 131], "input_": 18, "insensit": 116, "insert": [51, 108, 110, 112, 113, 116], "insid": 33, "inspect": [100, 130], "instal": [126, 127, 130], "instanc": [3, 8, 15, 16, 51, 74, 78, 89, 92, 93, 96, 97, 98, 106, 108, 110, 111, 112, 113, 116, 130, 131], "instanti": 130, "instead": [15, 16, 51, 77, 79, 108, 110, 112, 113, 116, 126, 127, 130, 131, 132], "instruct": [130, 132], "int": [57, 76, 77, 79, 81, 89, 106, 108, 111, 131], "integ": [15, 16, 51, 76, 77, 79, 106, 108, 110, 112, 113, 116, 117, 130, 131], "integr": [129, 131], "intend": [128, 130, 131], "intent": [126, 127], "intention": [51, 108, 110, 112, 113, 116], "interact": 131, "interest": 131, "interfac": [13, 128, 130, 131], "interlink": [126, 127], "intern": [89, 111, 126, 127, 131, 132], "interpret": [15, 16, 51, 108, 110, 112, 113, 116, 131], "intersphinx": [126, 127], "intro": 129, "introduc": [126, 127, 130, 131], "intuit": 131, "invoc": [130, 131], "invok": [15, 16, 130], "involv": [130, 131], "ioerror": 67, "is_hpc": 108, "is_split_spati": [13, 15, 16, 23], "isalnum": [51, 108, 110, 112, 113, 116], "isalpha": [51, 108, 110, 112, 113, 116], "isascii": [51, 108, 110, 112, 113, 116], "isdecim": [51, 108, 110, 112, 113, 116], "isdigit": [51, 108, 110, 112, 113, 116], "isidentifi": [51, 108, 110, 112, 113, 116], "isinst": 130, "iskeyword": [51, 108, 110, 112, 113, 116], "islow": [51, 108, 110, 112, 113, 116], "isnumer": [51, 108, 110, 112, 113, 116], "isol": 132, "isprint": [51, 108, 110, 112, 113, 116], "isspac": [51, 108, 110, 112, 113, 116], "issu": [126, 127, 130, 131, 132], "istitl": [51, 108, 110, 112, 113, 116], "isupp": [51, 108, 110, 112, 113, 116], "item": [15, 16, 31, 89, 111], "iter": [15, 16, 21, 51, 89, 106, 108, 110, 111, 112, 113, 116, 130], "its": [51, 108, 110, 112, 113, 116, 130, 131, 132], "itself": [31, 51, 108, 110, 112, 113, 116, 130, 131], "job": [2, 5, 15, 16, 20, 21, 25, 31, 58, 76, 77, 79, 81, 85, 86, 87, 89, 102, 104, 107, 108, 109, 110, 111, 113, 114, 128, 130, 131], "job_attr": [89, 111, 114], "job_exist": [89, 111], "job_hardwar": [89, 111], "job_id": [76, 77, 79, 89, 111, 131], "job_nam": [15, 16, 76, 77, 79, 89, 111, 114, 130], "job_statu": 131, "job_tabl": [2, 85], "join": [51, 106, 108, 110, 112, 113, 116], "join_df": 106, "jointli": 130, "json": [2, 18, 54, 57, 85, 89, 111, 130, 131], "json5": 53, "just": [44, 45, 126, 127, 130, 131], "justifi": [51, 108, 110, 112, 113, 116], "k": [89, 111], "keep": [76, 77, 79, 126, 127, 131, 132], "keep_sh": [76, 77, 79], "keepend": [51, 108, 110, 112, 113, 116], "kei": [2, 9, 11, 15, 16, 20, 21, 25, 31, 32, 33, 39, 44, 51, 58, 76, 77, 79, 87, 89, 102, 104, 106, 108, 110, 111, 112, 113, 116, 129, 131], "kestrel": [108, 131], "keyerror": [69, 89, 111], "keyword": [15, 16, 25, 51, 58, 76, 77, 79, 89, 106, 108, 110, 111, 112, 113, 116], "kick": 131, "kickoff": [25, 130, 131], "kill": [89, 111], "know": [126, 127], "knowledg": 130, "known": 129, "kwarg": [20, 51, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 106, 108, 110, 112, 113, 116, 121, 122, 123, 124], "l": [77, 131], "lack": [89, 111], "laid": [15, 16], "larg": [11, 128, 130, 131], "last": [85, 106, 130, 131], "lastli": 130, "lat": [130, 131], "later": 130, "latest": 32, "latter": 130, "lead": [15, 16, 51, 108, 110, 112, 113, 116, 126, 127], "learn": [126, 127], "least": [20, 21, 25, 51, 85, 108, 110, 112, 113, 116, 130], "leav": 131, "left": [51, 108, 110, 112, 113, 116], "legaci": 58, "len": [51, 108, 110, 112, 113, 116, 130], "length": [15, 16, 51, 106, 108, 110, 112, 113, 116, 130], "let": [130, 131], "level": [2, 15, 16, 20, 21, 93, 94, 96, 99, 130, 131], "levelnam": [91, 93, 96], "leverag": 130, "li": [106, 130], "librari": [32, 100, 126, 127, 130, 131, 132], "lieu": [15, 16], "like": [20, 21, 25, 31, 39, 44, 45, 48, 58, 59, 60, 84, 85, 87, 89, 102, 104, 106, 111, 114, 119, 126, 127, 128, 130, 131, 132], "limit": [44, 45, 51, 108, 110, 112, 113, 116, 129, 130], "line": [51, 76, 77, 79, 108, 110, 112, 113, 116, 126, 127, 128, 130, 131], "lineno": [91, 93, 96], "link": [126, 127], "linter": [126, 127], "linux": [131, 132], "list": [2, 9, 11, 13, 15, 16, 21, 31, 32, 44, 45, 46, 47, 49, 51, 60, 76, 77, 79, 85, 87, 89, 92, 93, 104, 106, 108, 110, 111, 112, 113, 116, 117, 126, 127, 130, 131, 132], "live": [130, 131], "ljust": [51, 108, 110, 112, 113, 116], "ll": 130, "load": [52, 53, 54, 55, 56, 59, 89, 111, 130], "loc": 106, "local": [11, 86, 89, 108, 126, 127, 131], "locat": [106, 128, 130, 131], "lock": [126, 127, 132], "log": [2, 15, 16, 20, 21, 58, 85, 87, 126, 127, 129, 131], "log_directori": [15, 16, 20, 21, 130, 131], "log_fil": [2, 20, 21, 58, 85, 93, 131], "log_format": 58, "log_level": [58, 94, 131], "logger": [20, 21, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 87, 92, 94, 96, 97, 98, 99, 100, 121, 122, 123, 124, 126, 127, 130], "logging_opt": [20, 21], "logic": [119, 130], "lon": [130, 131], "long": [32, 77, 131], "longer": [126, 127, 130], "look": [106, 128, 130, 131], "lookup": [51, 108, 110, 112, 113, 116], "lookuperror": [51, 108, 110, 112, 113, 116], "low_res_resource_fil": 131, "lower": [51, 108, 110, 112, 113, 116], "lowercas": [15, 16, 51, 108, 110, 112, 113, 116], "lowest": [51, 108, 110, 112, 113, 116], "lstrip": [51, 108, 110, 112, 113, 116], "luckili": 131, "m": [77, 79, 130], "mac": 132, "machin": [131, 132], "made": 119, "mai": [11, 15, 16, 25, 51, 58, 60, 89, 108, 110, 111, 112, 113, 116, 126, 127, 130, 131], "main": [7, 9, 15, 16, 111, 126, 127, 132], "mainli": [51, 108, 110, 112, 113, 116], "maintain": [126, 127], "make": [2, 15, 16, 32, 51, 82, 85, 87, 89, 96, 97, 98, 108, 110, 111, 112, 113, 116, 126, 127, 130, 131, 132], "make_cli": [126, 127, 130], "make_job_fil": 89, "make_script_str": [76, 77, 79], "make_single_job_fil": [89, 111], "maketran": [51, 108, 110, 112, 113, 116], "mamba": [126, 127, 132], "manag": [76, 84, 86, 89, 106, 107, 108, 109, 111, 114, 126, 127, 128, 131, 132], "mandatori": 131, "mani": [44, 45, 128, 130, 131], "manner": 131, "manual": [130, 131], "map": [31, 51, 89, 108, 110, 111, 112, 113, 116, 117, 126, 127], "mark": [89, 111], "mark_job_as_submit": [89, 111], "match": [15, 16, 44, 45, 106], "matplotlib": [126, 127], "matur": 130, "max_work": [15, 16, 130, 131], "maximum": [51, 108, 110, 112, 113, 116, 126, 127, 130], "maxsplit": [51, 108, 110, 112, 113, 116], "mb": 130, "mean": [15, 16, 18, 51, 108, 110, 112, 113, 116, 119, 126, 127, 130, 131, 132], "meet": [126, 127, 131], "member": [51, 108, 110, 112, 113, 116, 126, 127], "members_as_str": [51, 108, 110, 112, 113, 116], "memori": [44, 45, 77, 79, 94, 130, 131], "memory_limit_per_work": [15, 16], "memory_utilization_limit": [15, 16, 44, 45, 131], "mention": 131, "merg": [126, 127], "messag": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 91, 93, 94, 96, 121, 122, 123, 124, 126, 127, 130, 131], "meta": [15, 16, 44, 48, 130], "metadata": 130, "meth": [126, 127], "method": [2, 3, 13, 15, 16, 23, 31, 44, 45, 51, 52, 53, 54, 55, 56, 74, 76, 77, 78, 79, 85, 86, 87, 89, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 116, 119, 126, 127, 130, 131], "might": [130, 131], "mind": 131, "miniconda": 132, "minim": [126, 127, 128, 130], "minimum": [15, 16, 131], "minor": [15, 16, 18, 130], "minut": 131, "miss": [15, 16, 25, 89, 111], "mix": 131, "mkdir": 131, "mm": 81, "mode": 130, "model": [15, 16, 128, 129, 130], "model_preprocessor": 130, "modif": [126, 127], "modifi": [2, 100, 126, 127, 130, 131], "modul": [2, 50, 51, 73, 85, 89, 90, 108, 110, 112, 113, 116, 126, 127, 130, 131], "monitor": [2, 27, 38, 39, 85, 87, 89, 102, 111, 128, 129], "monitor_background": [2, 85], "more": [9, 23, 37, 51, 89, 108, 110, 111, 112, 113, 116, 126, 127, 128, 130, 131], "most": [32, 130, 131], "move": [44, 126, 127, 130, 132], "move_chunk": 44, "msg": [94, 126, 127], "much": [130, 131], "multi": 131, "multipl": [11, 15, 16, 27, 32, 33, 43, 44, 45, 93, 104, 126, 127, 129, 131, 132], "multiprocess": [15, 16, 32, 129, 131], "must": [15, 16, 33, 44, 51, 85, 87, 106, 108, 110, 112, 113, 116, 117, 130, 131, 132], "my_bash_script": 131, "my_cal": 85, "my_custom_logger_init_func": 130, "my_func": [126, 127], "my_model_run": 131, "my_script": [32, 131], "myfinalmodel": 130, "n": [51, 108, 110, 112, 113, 116, 130, 132], "name": [9, 11, 13, 14, 15, 16, 20, 21, 23, 25, 31, 44, 45, 46, 51, 52, 76, 77, 78, 79, 82, 86, 87, 89, 97, 98, 99, 102, 104, 106, 108, 110, 111, 112, 113, 114, 116, 130, 131], "namedtupl": 76, "natur": [51, 108, 110, 112, 113, 116], "necessari": [126, 127, 132], "necessit": 130, "need": [15, 16, 49, 126, 127, 130, 131], "nest": [76, 77, 79], "never": [51, 108, 110, 112, 113, 116, 126, 127, 130], "new": [3, 15, 16, 51, 74, 78, 106, 108, 110, 112, 113, 116, 118, 126, 127, 130, 131, 132], "newli": [131, 132], "newlin": 57, "next": 131, "nifti": 130, "node": [9, 11, 13, 15, 16, 20, 21, 23, 32, 33, 37, 77, 79, 89, 108, 111, 128, 130, 131], "nohup": [83, 85, 131], "non": [15, 16, 51, 106, 108, 110, 112, 113, 116, 131], "none": [9, 11, 13, 14, 15, 16, 18, 19, 20, 21, 23, 44, 45, 46, 51, 76, 77, 79, 80, 81, 86, 89, 93, 108, 109, 110, 111, 112, 113, 116, 130], "normal": [79, 110, 131], "not_good_enough_data": [126, 127], "notabl": 130, "notat": [51, 108, 110, 112, 113, 116], "note": [2, 11, 13, 15, 16, 32, 44, 51, 85, 108, 110, 112, 113, 116, 130, 131], "noth": [89, 111], "notic": 131, "now": [130, 131], "np": [126, 127, 130], "nrel": [90, 108, 126, 127, 130, 131, 132], "nrwal": 131, "nsrdb": [130, 131], "null": [18, 131], "num_spac": 57, "number": [3, 11, 15, 16, 51, 57, 74, 76, 77, 78, 79, 81, 106, 108, 110, 112, 113, 116, 117, 130, 131], "numer": [51, 108, 110, 112, 113, 116, 117], "numpi": [15, 16, 126, 127, 130], "o": 130, "obj": [18, 25, 106, 126, 127, 130], "object": [2, 8, 13, 15, 16, 18, 23, 25, 44, 45, 87, 89, 94, 102, 103, 106, 109, 111, 114, 126, 127, 130, 131], "obtain": [130, 132], "occur": [15, 16, 131], "occurr": [3, 51, 74, 78, 108, 110, 112, 113, 116], "off": 131, "offer": 130, "offici": [126, 127], "often": [15, 16, 131], "old": [51, 108, 110, 112, 113, 116], "onc": [126, 127, 130, 131], "one": [9, 23, 31, 37, 44, 45, 51, 89, 108, 110, 111, 112, 113, 116, 126, 127, 130, 131, 132], "ones": [51, 108, 110, 112, 113, 116, 119, 130], "oni": 131, "onli": [2, 15, 16, 23, 32, 51, 85, 89, 106, 108, 110, 111, 112, 113, 116, 126, 127, 130, 131], "open": [83, 126, 127, 128], "oper": [51, 108, 110, 112, 113, 116, 130], "opinion": [126, 127], "opportun": 130, "optim": 131, "option": [9, 11, 15, 16, 20, 21, 23, 31, 39, 44, 45, 46, 51, 57, 58, 59, 76, 77, 79, 80, 81, 86, 87, 89, 93, 96, 97, 102, 104, 106, 108, 109, 110, 111, 112, 113, 116, 130, 131], "orchestr": 131, "order": [15, 16, 131], "ordin": [51, 108, 110, 112, 113, 116], "org": [32, 128], "origin": [51, 108, 110, 112, 113, 116, 126, 127, 130], "other": [15, 16, 51, 108, 110, 112, 113, 116, 126, 127, 130, 131], "otherwis": [51, 85, 89, 108, 110, 111, 112, 113, 116, 119], "our": [130, 131], "out": [15, 16, 31, 32, 44, 76, 77, 79, 83, 89, 104, 111, 126, 127, 130, 131], "out_dir": [15, 16, 25], "out_fil": [32, 89, 104, 111, 114], "out_file_nam": [15, 16], "out_fp": 130, "out_fpath": [15, 16], "out_path": 130, "output": [9, 11, 15, 16, 25, 31, 37, 44, 45, 51, 58, 76, 77, 79, 83, 87, 97, 108, 110, 112, 113, 116, 130, 131], "output_request": 131, "outsid": 131, "over": [15, 16, 126, 127, 128, 130, 131], "overal": [126, 127], "overlap": [51, 108, 110, 112, 113, 116], "overrid": 85, "overwrit": 130, "own": [32, 126, 127, 130, 131], "p": [76, 77, 79, 130], "packag": [9, 95, 129, 132], "pad": [51, 108, 110, 112, 113, 116], "pair": [2, 15, 16, 20, 21, 25, 58, 76, 77, 79, 87, 89, 106, 111, 131], "panda": [44, 49, 89, 111, 126, 127, 130], "parallel": [32, 106, 108, 128, 130, 131], "param": 23, "param_csv_fp": 130, "param_requir": 23, "paramet": [2, 8, 9, 11, 15, 16, 18, 20, 21, 23, 25, 31, 32, 33, 37, 39, 44, 45, 46, 47, 48, 49, 57, 58, 59, 60, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 89, 92, 93, 94, 96, 97, 102, 104, 106, 108, 109, 111, 114, 117, 118, 119, 126, 127, 129, 131], "parameter": 131, "parameter_help": 23, "parametr": [1, 2, 129, 130], "parent": [15, 16], "pars": [31, 48, 52, 53, 54, 55, 56, 76, 77, 79, 89, 104, 111, 117], "parsabl": 58, "parse_queue_str": [76, 77, 79], "parse_step_statu": [89, 111], "part": [13, 31, 32, 37, 51, 89, 108, 110, 111, 112, 113, 116, 126, 127, 128, 131], "partial": 131, "particular": [15, 16, 20, 57, 126, 127, 130, 131], "particularli": 128, "partit": [15, 16, 51, 79, 108, 110, 112, 113, 116], "pass": [15, 16, 25, 44, 45, 76, 77, 79, 89, 106, 108, 111, 126, 127, 130, 131], "pass_through": [44, 45], "path": [2, 11, 15, 16, 20, 21, 25, 31, 32, 37, 39, 44, 45, 48, 58, 59, 60, 77, 79, 85, 87, 89, 93, 97, 102, 104, 111, 114, 119, 126, 127, 130, 131, 132], "pathlib": [119, 126, 127], "pattern": [11, 15, 16, 31, 44, 46, 131], "paul": [126, 127, 128, 130, 131], "pb": [86, 108, 109], "pd": [2, 48, 85, 89, 106, 111, 117, 126, 127, 130], "pep8": [126, 127], "per": [108, 130, 131], "peregrin": 108, "perform": [11, 39, 60, 87, 102, 126, 127, 128, 130, 131], "period": [32, 126, 127, 131], "permut": [130, 131], "pid": [89, 111], "piec": [126, 127, 132], "pinchuk": [126, 127, 128, 130, 131], "pip": [130, 132], "pipe_step": [39, 89, 111], "pipelin": [2, 9, 15, 16, 25, 31, 32, 37, 39, 85, 86, 88, 89, 111, 114, 128, 129, 130], "pipeline_background_method": 85, "pipeline_class": 85, "pipeline_config": [85, 131], "pipeline_index": 131, "pipeline_step": [15, 16, 19, 25, 89, 111, 114], "pitfal": 131, "pixi": [126, 127, 132], "place": [126, 127, 130, 131], "platform": [126, 127, 132], "pleas": [14, 15, 16, 126, 127, 130, 131], "plot": [126, 127], "plotli": [126, 127], "point": [5, 7, 10, 11, 15, 16, 26, 33, 44, 49, 51, 105, 106, 108, 110, 112, 113, 116, 117, 130, 131], "pool_siz": [15, 16, 131], "pop": [89, 111, 130], "popitem": [89, 111], "popul": 131, "portion": 48, "posit": [51, 108, 110, 112, 113, 116], "possibl": [32, 51, 108, 110, 112, 113, 116, 130, 131], "post": [126, 127], "potenti": [126, 127, 130, 131], "power": [129, 130], "ppinchuk": [126, 127, 130, 131], "pq": [51, 108, 110, 112, 113, 116], "pr": [126, 127], "practic": [130, 131], "pre": [15, 16, 31, 32, 89, 111, 126, 127, 129, 131], "preced": 104, "prefer": [130, 131], "prefix": [51, 108, 110, 112, 113, 116, 131], "prepar": 130, "preprocess": [12, 15, 16, 130], "preprocess_collect_config": [15, 16], "present": [3, 15, 16, 51, 74, 78, 89, 108, 110, 111, 112, 113, 116, 130, 131], "previou": [15, 16, 31, 89, 104, 111, 131], "previous": [89, 104, 111], "primari": [15, 16, 106], "primarili": [89, 111], "print": [39, 77, 79, 99, 100, 131], "printabl": [51, 108, 110, 112, 113, 116], "printout": [76, 77, 79], "prior": [11, 130, 132], "prioriti": 79, "privat": [15, 16, 126, 127], "probabl": [126, 127], "problem": [130, 131], "proce": [130, 131], "process": [15, 16, 31, 32, 49, 83, 89, 104, 111, 130, 131], "processor": [32, 129, 131], "processpoolexecutor": 130, "profil": 131, "program": 9, "programmat": [15, 16], "progress": [114, 130, 131], "project": [11, 15, 16, 31, 32, 33, 44, 49, 105, 106, 117, 130, 131], "project_dir": [15, 16, 31, 37], "project_point": [9, 11, 15, 16, 33, 44, 49, 117, 130, 131], "project_points_split_rang": 33, "projectpoint": [11, 15, 16, 33, 130, 131], "promis": [126, 127, 132], "prompt": 130, "proper": [128, 130], "properli": [15, 16, 104, 130], "properti": [2, 13, 15, 16, 23, 44, 45, 52, 76, 77, 79, 85, 87, 89, 102, 103, 106, 108, 111], "protect": [126, 127], "provid": [13, 15, 16, 31, 89, 111, 126, 127, 128, 130, 131, 132], "public": [15, 16, 126, 127], "pull": [15, 16, 23, 39, 126, 127, 128], "punctuat": [51, 108, 110, 112, 113, 116], "pure": [15, 16], "purg": [11, 44, 89, 111], "purge_chunk": [11, 44, 131], "purpos": [15, 16, 130, 131], "push": [126, 127], "put": [89, 111, 131], "pvdegradationtool": 130, "pvwattsv8": 131, "py": [32, 126, 127, 130, 131], "pyplot": [126, 127], "pytest": [126, 127], "python": [15, 16, 18, 32, 51, 77, 79, 83, 108, 110, 112, 113, 116, 128, 129, 131, 132], "pyyaml": 131, "q": [126, 127], "q_submitted_statu": 76, "qa": 131, "qc": 131, "qo": [77, 79, 108, 110, 131], "qstat": 77, "qualiti": [77, 79, 126, 127], "qualnam": [51, 108, 110, 112, 113, 116], "queri": [76, 77, 79, 86, 89, 108, 109, 111], "query_queu": [76, 77, 79], "question": [44, 100, 129], "queue": [76, 77, 79, 86, 89, 104, 108, 109, 111, 131], "queue_dict": [76, 77, 79], "queue_str": [76, 77, 79], "quot": [18, 131], "r": [51, 59, 108, 110, 112, 113, 116, 119, 126, 127, 131], "race": 130, "rais": [3, 25, 46, 51, 59, 74, 78, 89, 102, 104, 108, 110, 111, 112, 113, 114, 116, 126, 127, 130], "ram": 130, "rang": [33, 51, 106, 108, 110, 112, 113, 116], "rapp": [126, 127], "rare": 130, "rate": 79, "rather": [130, 131], "raw": [76, 77, 79], "rd": 131, "re": [11, 89, 111, 131, 132], "reach": [126, 127, 130, 131], "read": [126, 127, 131], "read_csv": 130, "readabl": [126, 127], "readi": [126, 127, 130, 131], "real": 130, "realli": [126, 127], "rec": 48, "receiv": [15, 16, 130], "recogn": 130, "recommend": [126, 127, 131, 132], "record": [89, 111, 114, 130], "record_monitor_pid": [89, 111], "recurs": [27, 39, 59, 118, 131], "refer": [49, 85, 126, 127, 130, 131], "refresh": [126, 127], "regard": 130, "regardless": 11, "regist": [51, 108, 110, 112, 113, 116], "register_error": [51, 108, 110, 112, 113, 116], "regular": [51, 108, 110, 112, 113, 116], "rel": [31, 60, 131], "relat": [126, 127, 132], "releas": [126, 127], "relev": [11, 106], "reli": [126, 127, 130], "reload": [89, 111], "remain": [51, 89, 108, 110, 111, 112, 113, 116, 126, 127, 130, 131], "remov": [11, 31, 44, 51, 89, 100, 108, 110, 111, 112, 113, 116, 131], "removeprefix": [51, 108, 110, 112, 113, 116], "removesuffix": [51, 108, 110, 112, 113, 116], "render": [126, 127, 130], "rep": 131, "repeat": 131, "replac": [18, 51, 60, 89, 108, 110, 111, 112, 113, 116, 131], "repositori": [126, 127, 132], "repr": [51, 108, 110, 112, 113, 116], "repres": [11, 31, 32, 44, 46, 76, 87, 89, 96, 111, 119, 130, 131], "represent": [13, 37, 130], "reproduc": [126, 127, 132], "request": [9, 15, 16, 77, 79, 80, 81, 93, 106, 126, 127, 130, 131], "requir": [13, 15, 16, 23, 25, 112, 126, 127, 130, 131, 132], "required_arg": 23, "res_fil": [15, 16], "research": 128, "resembl": 119, "reserv": [51, 108, 110, 112, 113, 116], "reset": [76, 77, 79, 89, 108, 111, 129, 130], "reset_aft": [89, 111], "reset_all_cached_queri": 108, "reset_query_cach": [76, 77, 79], "resolv": [31, 59, 60, 119], "resolve_path": 59, "resourc": [32, 47, 49, 106, 126, 127, 131], "resource_fil": 131, "respect": 25, "respons": [15, 16, 130], "rest": [51, 108, 110, 112, 113, 116], "restart": 131, "result": [15, 16, 31, 51, 104, 106, 108, 110, 112, 113, 116, 126, 127, 130, 131, 132], "retain": 130, "retriev": [89, 111], "retrieve_job_statu": [89, 111], "return": [3, 8, 9, 11, 15, 16, 18, 20, 23, 31, 32, 33, 37, 44, 46, 47, 48, 49, 51, 57, 59, 60, 74, 76, 77, 78, 79, 80, 81, 83, 89, 94, 96, 97, 98, 104, 106, 108, 110, 111, 112, 113, 116, 117, 118, 119, 130], "rev": [1, 2, 77, 79, 84, 85, 87, 128, 130, 131], "review": [126, 127], "revx": [130, 131], "rex": [15, 16, 58, 90, 126, 127, 130], "rfind": [51, 108, 110, 112, 113, 116], "rich": 128, "richer": 9, "right": [51, 108, 110, 112, 113, 116, 130, 131], "rindex": [51, 108, 110, 112, 113, 116], "risk": 131, "rjust": [51, 108, 110, 112, 113, 116], "robust": 128, "rotor": 130, "row": [106, 130, 131], "rpartit": [51, 108, 110, 112, 113, 116], "rsplit": [51, 108, 110, 112, 113, 116], "rstrip": [51, 83, 108, 110, 112, 113, 116], "rule": 130, "run": [1, 2, 11, 15, 16, 17, 19, 20, 21, 23, 25, 31, 32, 33, 37, 39, 44, 76, 77, 79, 85, 86, 87, 89, 102, 104, 108, 111, 114, 119, 126, 127, 128, 129, 130, 132], "run_func": [20, 21], "run_model": 130, "runner": [13, 130], "runtim": [114, 131], "runtimeerror": 70, "safe": [11, 119, 131], "sake": 131, "sam": [106, 131], "sam_fil": 131, "same": [15, 16, 51, 85, 87, 108, 110, 112, 113, 116, 130, 131], "sampl": 106, "save": [130, 131], "sbatch": [80, 81], "scalabl": 130, "scalar": 106, "scale": [128, 130], "scale_output": 131, "scenario": [130, 131], "schedul": 108, "scheme": [51, 108, 110, 112, 113, 116], "scratch": 131, "screen": 131, "script": [18, 32, 76, 77, 79, 80, 82, 129, 130], "search": [39, 46, 51, 108, 110, 112, 113, 116, 132], "second": [31, 130, 131], "second_gen": 131, "section": [15, 16, 126, 127, 130, 131], "see": [9, 15, 16, 126, 127, 130, 131], "select": [15, 16, 131], "self": [3, 51, 74, 78, 87, 106, 108, 110, 112, 113, 116, 126, 127, 130], "send": 131, "sens": 131, "sensit": 131, "sent": [20, 21], "sentenc": [126, 127], "sep": [51, 108, 110, 112, 113, 116], "separ": [31, 32, 51, 108, 110, 112, 113, 116, 131], "sequenc": 131, "sequenti": [106, 131], "seri": 130, "serial": [18, 57], "servic": [77, 79], "session": 131, "set": [2, 11, 15, 16, 21, 23, 31, 44, 45, 51, 85, 87, 89, 108, 110, 111, 112, 113, 114, 116, 126, 127, 128, 130, 131], "set1": 131, "set1_wthh100_fcr005": 131, "set1_wthh100_fcr006": 131, "set1_wthh100_fcr008": 131, "set1_wthh100_fcr01": 131, "set1_wthh100_fcr02": 131, "set1_wthh110_fcr005": 131, "set1_wthh110_fcr006": 131, "set1_wthh110_fcr008": 131, "set1_wthh110_fcr01": 131, "set1_wthh110_fcr02": 131, "set1_wthh120_fcr005": 131, "set1_wthh120_fcr006": 131, "set1_wthh120_fcr008": 131, "set1_wthh120_fcr01": 131, "set1_wthh120_fcr02": 131, "set_tag": 131, "setback": 131, "setdefault": [89, 111], "setup": [93, 129, 131], "sever": [130, 131], "sh": [82, 131], "sh_script": [77, 79, 131], "shape": [44, 130], "share": [32, 131], "shell": [77, 79, 80, 82, 126, 127, 132], "short": [15, 16, 76, 77, 79, 126, 127], "shortcut": 131, "should": [11, 15, 16, 21, 31, 85, 89, 93, 106, 111, 114, 126, 127, 130, 131], "show": [16, 126, 127, 130, 131], "shown": [126, 127, 130, 131], "signatur": [15, 16, 130], "signifi": 130, "signific": [126, 127, 130, 131], "significantli": 130, "similar": [130, 131], "simpl": [130, 131], "simpli": [11, 32, 85, 126, 127, 130, 131], "simplifi": 130, "simultan": [15, 16], "sinc": [15, 16, 130, 131], "singl": [11, 15, 16, 23, 25, 31, 32, 44, 45, 46, 87, 89, 93, 106, 111, 126, 127, 128, 130, 131], "site": [44, 45, 48, 106, 130, 131], "site_data": 131, "sites_as_slic": 106, "sites_per_split": 106, "sites_per_work": [15, 16, 131], "situat": 130, "six": 130, "size": [51, 108, 110, 112, 113, 116], "skim": [126, 127], "skip": 131, "skip_doc_param": [13, 15, 16, 130], "skip_param": 23, "slice": [44, 49, 51, 106, 108, 110, 112, 113, 116], "slurm": [80, 81, 86, 89, 108, 109, 111], "small": 131, "so": [15, 16, 25, 76, 77, 79, 119, 126, 127, 130, 131, 132], "softwar": 128, "sole": 130, "solicit": 130, "solut": [130, 131], "some": [15, 16, 18, 25, 44, 89, 90, 111, 126, 127, 130], "someth": [126, 127, 131, 132], "sometim": [128, 130, 131], "somewhat": [126, 127], "somewher": [119, 130, 131], "soon": 131, "sort": 46, "sourc": [2, 6, 8, 9, 11, 13, 14, 15, 16, 18, 19, 20, 21, 23, 25, 27, 28, 29, 31, 32, 33, 35, 37, 39, 40, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 128], "source_fil": 45, "space": [51, 57, 76, 77, 79, 108, 110, 112, 113, 116, 131], "spatial": [9, 13, 15, 16, 17, 23], "spawn": 131, "special": [80, 130], "specif": [20, 21, 31, 51, 79, 106, 108, 110, 112, 113, 116, 119, 130, 131], "specifi": [9, 15, 16, 23, 31, 32, 51, 57, 58, 79, 89, 93, 96, 106, 108, 110, 111, 112, 113, 116, 130, 131], "sphinx": [126, 127, 130], "split": [9, 13, 15, 16, 23, 33, 51, 76, 77, 79, 106, 108, 110, 112, 113, 116, 129], "split_kei": [9, 13, 14, 15, 16, 130], "split_rang": 106, "splitlin": [51, 108, 110, 112, 113, 116], "src": 130, "ss": 81, "ssh": [131, 132], "stackoverflow": 100, "stage": 130, "stai": [15, 16], "standalon": [126, 127], "standard": [15, 16, 76, 77, 79, 83, 126, 127, 129, 130], "standbi": 110, "start": [3, 51, 74, 78, 106, 108, 110, 112, 113, 114, 116, 119, 126, 127, 128, 129, 130], "startswith": [51, 108, 110, 112, 113, 116], "state": 79, "statement": [126, 127], "static": [51, 85, 89, 108, 110, 112, 113, 116, 131], "staticmethod": 85, "statist": 131, "statu": [21, 31, 35, 76, 77, 78, 79, 84, 86, 87, 102, 104, 128, 129, 130], "status": [39, 86, 89, 109, 111], "status_dir": [89, 104, 111], "status_update_arg": 21, "statusfield": [89, 104, 111], "statusupd": 21, "stderr": [2, 75, 77, 79, 83, 85], "stdout": [2, 20, 21, 75, 76, 77, 79, 83, 85, 131], "stdout_path": [77, 79], "step": [11, 15, 16, 25, 27, 31, 32, 37, 39, 87, 89, 103, 104, 111, 114, 129, 130], "step_dict": 103, "step_index": [89, 111], "still": [126, 127, 130, 131], "stop": [3, 51, 74, 78, 108, 110, 112, 113, 116, 131], "store": [11, 44, 130, 131], "str": [2, 9, 11, 15, 16, 18, 20, 21, 23, 25, 31, 32, 37, 39, 44, 45, 46, 49, 51, 52, 57, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 89, 93, 94, 96, 97, 102, 104, 106, 108, 110, 111, 112, 113, 114, 116, 119], "straight": 128, "strategi": 130, "stream": [52, 53, 54, 55, 56, 58, 93, 98], "streamhandl": [93, 98], "streamlin": 131, "strict": [51, 108, 110, 112, 113, 116], "strictli": 131, "string": [15, 16, 18, 23, 25, 31, 32, 37, 51, 52, 53, 54, 55, 56, 57, 60, 76, 77, 79, 80, 81, 83, 85, 87, 89, 94, 96, 106, 108, 110, 111, 112, 113, 116, 119, 130, 131], "strip": [51, 108, 110, 112, 113, 116], "strongli": [126, 127], "structur": [15, 16, 97, 131], "style": [15, 16, 31, 44, 46, 58, 87, 126, 127, 130], "sub": [2, 44, 51, 85, 106, 108, 110, 112, 113, 116, 131], "sub_dir": [2, 44, 85], "subclass": [77, 79, 87, 126, 127], "subcommand": 9, "subject": [126, 127], "submiss": [76, 77, 79, 130, 131], "submit": [25, 74, 76, 77, 79, 87, 89, 111, 126, 127, 130, 131], "subprocess": [77, 79, 82, 83, 86, 89, 109, 111], "subprocess_manag": [86, 89, 109, 111], "subsequ": 130, "subset": [15, 16], "substitut": [51, 87, 108, 110, 112, 113, 116], "substr": [51, 108, 110, 112, 113, 116], "success": 114, "successfulli": [76, 77, 79, 130], "suffix": [51, 108, 110, 112, 113, 116], "suggest": [15, 16], "suit": 2, "suitabl": [11, 51, 108, 110, 112, 113, 116], "sum": 131, "summari": [2, 15, 16, 23, 85, 126, 127], "sup3rcc": 130, "suppli": [32, 130, 131], "support": [15, 16, 108, 126, 127, 128, 130, 131, 132], "supports_categorical_qo": 108, "suppos": [130, 131], "sure": [15, 16, 32, 87, 126, 127, 131, 132], "surpris": 11, "swapcas": [51, 108, 110, 112, 113, 116], "sweep": 131, "sy": 132, "symlink": 119, "syntax": [15, 16], "system": [108, 128, 132], "t": [18, 31, 51, 59, 83, 108, 110, 112, 113, 116, 119, 126, 127, 130, 131, 132], "t1": 131, "t2": 131, "t3": 131, "t4": 131, "t5": 131, "t6": 131, "t7": 131, "t8": 131, "tab": [51, 108, 110, 112, 113, 116], "tabl": [2, 51, 85, 108, 110, 112, 113, 116, 131], "tabsiz": [51, 108, 110, 112, 113, 116], "tag": [3, 15, 16, 130, 131], "take": [58, 85, 106, 128, 130, 131], "taken": 58, "target": [89, 104, 111], "task": 131, "team": [126, 127], "technic": 130, "technologi": 131, "tell": 132, "templat": [15, 16, 23, 29, 34, 130, 131], "template_config": [23, 28, 42], "tempor": 130, "termin": [15, 16, 37, 89, 111, 130, 131, 132], "test": [51, 108, 110, 112, 113, 116, 131], "test_queu": 77, "test_scenario": [126, 127], "text": [51, 108, 110, 112, 113, 116], "than": [130, 131], "thank": 128, "thei": [11, 25, 51, 92, 108, 110, 112, 113, 116, 126, 127, 130, 131], "them": [15, 16, 32, 130, 131], "therebi": [15, 16], "therefor": [15, 16, 89, 104, 111, 126, 127, 128, 130, 131], "thi": [2, 9, 11, 13, 15, 16, 18, 20, 21, 23, 25, 31, 32, 33, 37, 44, 45, 51, 76, 77, 79, 83, 85, 86, 87, 89, 90, 93, 94, 104, 106, 108, 109, 110, 111, 112, 113, 114, 116, 119, 126, 127, 128, 130, 131, 132], "third": [51, 108, 110, 112, 113, 116], "thoroughli": [15, 16], "those": [130, 131], "though": [11, 126, 127], "thousand": 131, "three": [21, 51, 85, 108, 110, 112, 113, 116, 130, 131], "through": [44, 45, 131, 132], "throughout": 131, "throw": [126, 127], "thrown": 11, "time": [15, 16, 32, 44, 45, 81, 114, 126, 127, 130, 131], "time_end": 131, "time_index": [15, 16, 44, 130], "time_start": 131, "time_submit": 131, "timeout": [15, 16, 131], "tip": 131, "titl": [51, 108, 110, 112, 113, 116, 126, 127], "titlecas": [51, 108, 110, 112, 113, 116], "toml": 55, "too": [51, 108, 110, 112, 113, 116], "tool": [126, 127, 128, 130, 132], "top": [2, 9, 131], "topic": 129, "torc": 128, "total": [114, 130, 131], "total_runtim": 131, "touch": [126, 127], "toward": 128, "track": [114, 131], "trail": [51, 108, 110, 112, 113, 116], "transfer": 131, "transform": 130, "translat": [51, 108, 110, 112, 113, 116], "treat": [126, 127], "tree": [126, 127, 132], "tricki": 131, "trigger": 131, "true": [11, 13, 15, 16, 18, 23, 45, 51, 58, 59, 83, 87, 89, 93, 102, 108, 110, 111, 112, 113, 116, 130, 131], "truncat": [51, 108, 110, 112, 113, 116], "try": [51, 108, 110, 112, 113, 116, 131], "tupl": [3, 15, 16, 31, 44, 51, 74, 78, 89, 106, 108, 110, 111, 112, 113, 116], "turbin": [130, 131], "turn": [20, 21, 85, 130, 131], "tweak": 131, "twice": 131, "two": [15, 16, 32, 51, 85, 108, 110, 112, 113, 116, 130, 131], "txt": 32, "type": [2, 13, 15, 16, 23, 44, 45, 46, 51, 52, 57, 76, 77, 79, 85, 87, 89, 102, 106, 108, 110, 111, 112, 113, 116, 130, 131], "typeerror": 71, "typic": [15, 16, 23, 60, 76, 77, 79, 87, 119, 126, 127, 130, 131], "u": [51, 108, 110, 112, 113, 116, 130, 131], "ultim": 131, "unaccept": [126, 127], "unacceptable_valu": [126, 127], "uncas": [51, 108, 110, 112, 113, 116], "uncaught": 114, "unchang": [89, 111, 119], "under": [89, 104, 106, 111, 130], "underli": 131, "underscor": [15, 16, 126, 127], "understand": 131, "unicod": [51, 108, 110, 112, 113, 116], "unicodeencodeerror": [51, 108, 110, 112, 113, 116], "uniform": [126, 127], "uniqu": [15, 16, 89, 111, 130, 131], "unix": [31, 44, 46], "unless": [51, 89, 108, 110, 111, 112, 113, 114, 116, 126, 127, 131], "unnecessari": 13, "unnecessarili": 131, "unspecifi": 110, "untouch": [51, 89, 108, 110, 111, 112, 113, 116, 131], "up": [11, 16, 44, 106, 126, 127, 130, 131], "updat": [15, 16, 21, 31, 32, 60, 89, 104, 111, 118, 126, 127, 131, 132], "update_from_all_job_fil": [89, 111], "update_job_statu": [89, 111], "upon": 130, "upper": [51, 108, 110, 112, 113, 116], "uppercas": [51, 108, 110, 112, 113, 116], "us": [9, 11, 14, 15, 16, 20, 23, 31, 32, 33, 44, 51, 52, 57, 58, 76, 77, 79, 83, 85, 86, 89, 93, 106, 108, 109, 110, 111, 112, 113, 116, 126, 127, 129, 131, 132], "usabl": [51, 108, 110, 112, 113, 116], "usag": [94, 130, 131], "user": [2, 15, 16, 23, 31, 76, 77, 79, 126, 127, 128, 130, 131], "userdict": 111, "usernam": [76, 77, 79], "usr": 132, "usual": [130, 132], "utf": [51, 108, 110, 112, 113, 116], "util": [15, 16, 22, 24, 44, 45, 73, 90, 94, 128, 130, 131], "v": [87, 89, 111, 130, 131], "valid": [15, 16, 44, 51, 108, 110, 112, 113, 116, 130, 131], "valu": [2, 3, 11, 15, 16, 20, 21, 25, 31, 51, 57, 58, 74, 76, 77, 78, 79, 87, 89, 106, 108, 110, 111, 112, 113, 114, 116, 117, 126, 127, 130, 131], "valuabl": 130, "valueerror": [3, 51, 72, 74, 78, 108, 110, 112, 113, 116, 126, 127, 130], "varieti": 128, "variou": 131, "ve": 130, "verbos": [15, 16, 20, 21, 85, 87, 130, 131], "veri": 130, "verif": 130, "verifi": 131, "version": [9, 51, 57, 95, 108, 110, 112, 113, 116, 126, 127, 130, 131], "via": [51, 108, 110, 112, 113, 116, 126, 127, 131, 132], "view": [89, 111, 126, 127], "virtual": 132, "visual": 130, "vscode": [126, 127], "vv": 132, "w": [59, 89, 111, 119, 130], "wa": [76, 77, 79, 114, 130], "wai": [15, 16, 126, 127, 130, 131, 132], "wait": 131, "walltim": [77, 79, 81, 131], "want": [15, 16, 87, 130, 131], "ware": 121, "warn": [11, 44, 126, 127], "warrant": [126, 127], "watch": [126, 127], "we": [126, 127, 130, 131, 132], "web": 32, "websit": 32, "welcom": [126, 127, 132], "well": [15, 16, 44, 51, 108, 110, 112, 113, 116, 126, 127, 130, 131], "were": [44, 49], "wget": 32, "what": [57, 126, 127, 130, 131], "wheel": [126, 127], "when": [11, 15, 16, 51, 87, 108, 110, 112, 113, 114, 116, 126, 127, 130, 131], "whenev": 130, "where": [15, 16, 31, 51, 85, 87, 108, 110, 112, 113, 116, 126, 127, 130, 131], "wherev": [32, 131], "whether": [13, 15, 16, 20, 21, 23, 51, 89, 108, 110, 111, 112, 113, 116, 126, 127], "which": [15, 16, 23, 31, 39, 44, 45, 48, 51, 58, 60, 77, 80, 81, 89, 106, 108, 110, 111, 112, 113, 114, 116, 119, 126, 127, 130, 131, 132], "while": [31, 126, 127, 130, 131], "whitespac": [23, 51, 57, 108, 110, 112, 113, 116], "whole": 131, "whose": [15, 16, 44, 51, 108, 110, 112, 113, 116], "width": [51, 108, 110, 112, 113, 116], "wil": 11, "wildcard": 31, "wind_turbine_hub_ht": 131, "wind_turbine_rotor_diamet": 131, "wish": [130, 131], "within": [51, 57, 108, 110, 112, 113, 116, 126, 127, 128, 130, 131], "without": [2, 15, 16, 23, 44, 85, 131], "wm": 128, "word": [51, 108, 110, 112, 113, 116, 131], "work": [15, 16, 51, 108, 110, 112, 113, 116, 126, 127, 128, 130, 131, 132], "worker": [11, 106, 131], "workflow": [128, 131], "world": 130, "worth": 130, "would": [18, 23, 126, 127, 128, 130, 131], "wouldn": 130, "wrap": [13, 18], "write": [21, 44, 52, 53, 54, 55, 56, 114, 126, 127, 130, 131], "write_dataset": 130, "write_mapped_gid": 131, "written": [21, 44, 45, 82, 114, 130], "wtk": 130, "x": [51, 108, 110, 112, 113, 116, 130], "xmlcharrefreplac": [51, 108, 110, 112, 113, 116], "y": [51, 108, 110, 112, 113, 116, 130], "yaml": [56, 131], "year": 131, "yet": [44, 128, 130], "yield": [9, 15, 16, 106], "you": [2, 11, 15, 16, 85, 87, 126, 127, 130, 131, 132], "your": [15, 16, 32, 76, 77, 79, 126, 127, 129, 131, 132], "z": 130, "zero": [51, 89, 108, 110, 111, 112, 113, 116], "zfill": [51, 108, 110, 112, 113, 116], "zip": 32}, "titles": ["gaps", "gaps.batch", "gaps.batch.BatchJob", "gaps.batch.BatchSet", "gaps.cli", "gaps.cli.batch", "gaps.cli.batch.batch_command", "gaps.cli.cli", "gaps.cli.cli.as_click_command", "gaps.cli.cli.make_cli", "gaps.cli.collect", "gaps.cli.collect.collect", "gaps.cli.command", "gaps.cli.command.AbstractBaseCLICommandConfiguration", "gaps.cli.command.CLICommandConfiguration", "gaps.cli.command.CLICommandFromClass", "gaps.cli.command.CLICommandFromFunction", "gaps.cli.config", "gaps.cli.config.as_script_str", "gaps.cli.config.from_config", "gaps.cli.config.node_kwargs", "gaps.cli.config.run_with_status_updates", "gaps.cli.documentation", "gaps.cli.documentation.CommandDocumentation", "gaps.cli.execution", "gaps.cli.execution.kickoff_job", "gaps.cli.pipeline", "gaps.cli.pipeline.pipeline", "gaps.cli.pipeline.pipeline_command", "gaps.cli.pipeline.template_pipeline_config", "gaps.cli.preprocessing", "gaps.cli.preprocessing.preprocess_collect_config", "gaps.cli.preprocessing.preprocess_script_config", "gaps.cli.preprocessing.split_project_points_into_ranges", "gaps.cli.reset", "gaps.cli.reset.reset_command", "gaps.cli.script", "gaps.cli.script.script", "gaps.cli.status", "gaps.cli.status.main_monitor", "gaps.cli.status.status_command", "gaps.cli.templates", "gaps.cli.templates.template_command", "gaps.collection", "gaps.collection.Collector", "gaps.collection.DatasetCollector", "gaps.collection.find_h5_files", "gaps.collection.parse_gids_from_files", "gaps.collection.parse_meta", "gaps.collection.parse_project_points", "gaps.config", "gaps.config.ConfigType", "gaps.config.Handler", "gaps.config.JSON5Handler", "gaps.config.JSONHandler", "gaps.config.TOMLHandler", "gaps.config.YAMLHandler", "gaps.config.config_as_str_for_docstring", "gaps.config.init_logging_from_config_file", "gaps.config.load_config", "gaps.config.resolve_all_paths", "gaps.exceptions", "gaps.exceptions.gapsConfigError", "gaps.exceptions.gapsError", "gaps.exceptions.gapsExecutionError", "gaps.exceptions.gapsFileNotFoundError", "gaps.exceptions.gapsHPCError", "gaps.exceptions.gapsIOError", "gaps.exceptions.gapsIndexError", "gaps.exceptions.gapsKeyError", "gaps.exceptions.gapsRuntimeError", "gaps.exceptions.gapsTypeError", "gaps.exceptions.gapsValueError", "gaps.hpc", "gaps.hpc.COMMANDS", "gaps.hpc.DEFAULT_STDOUT_PATH", "gaps.hpc.HpcJobManager", "gaps.hpc.PBS", "gaps.hpc.Q_COLUMNS", "gaps.hpc.SLURM", "gaps.hpc.format_env", "gaps.hpc.format_walltime", "gaps.hpc.make_sh", "gaps.hpc.submit", "gaps.legacy", "gaps.legacy.BatchJob", "gaps.legacy.HardwareStatusRetriever", "gaps.legacy.Pipeline", "gaps.legacy.PipelineError", "gaps.legacy.Status", "gaps.log", "gaps.log.FORMAT", "gaps.log.add_handlers", "gaps.log.init_logger", "gaps.log.log_mem", "gaps.log.log_versions", "gaps.log.make_handler", "gaps.log.make_log_file_handler", "gaps.log.make_log_stream_handler", "gaps.log.print_logging_info", "gaps.log.print_logging_info_all_libraries", "gaps.pipeline", "gaps.pipeline.Pipeline", "gaps.pipeline.PipelineStep", "gaps.pipeline.parse_previous_status", "gaps.project_points", "gaps.project_points.ProjectPoints", "gaps.status", "gaps.status.HardwareOption", "gaps.status.HardwareStatusRetriever", "gaps.status.QOSOption", "gaps.status.Status", "gaps.status.StatusField", "gaps.status.StatusOption", "gaps.status.StatusUpdates", "gaps.utilities", "gaps.utilities.CaseInsensitiveEnum", "gaps.utilities.project_points_from_container_or_slice", "gaps.utilities.recursively_update_dict", "gaps.utilities.resolve_path", "gaps.warn", "gaps.warn.gapsCollectionWarning", "gaps.warn.gapsDeprecationWarning", "gaps.warn.gapsHPCWarning", "gaps.warn.gapsWarning", "&lt;no title&gt;", "Contributing to GAPs", "Contributing to GAPs", "GAPs documentation", "Examples", "How to use GAPs", "How to Run a Model Powered by GAPs", "Installation"], "titleterms": {"The": 131, "abstractbaseclicommandconfigur": 13, "acknowledg": 128, "add_handl": 92, "advanc": 130, "as_click_command": 8, "as_script_str": 18, "basic": [130, 131], "batch": [1, 2, 3, 5, 6, 131], "batch_command": 6, "batchjob": [2, 85], "batchset": 3, "caseinsensitiveenum": 116, "cli": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "clicommandconfigur": 14, "clicommandfromclass": 15, "clicommandfromfunct": 16, "collect": [10, 11, 43, 44, 45, 46, 47, 48, 49], "collector": 44, "command": [12, 13, 14, 15, 16, 74, 130], "commanddocument": 23, "config": [17, 18, 19, 20, 21, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 131], "config_as_str_for_docstr": 57, "configtyp": 51, "contribut": [126, 127], "coverag": [126, 127], "csv": 131, "custom": 131, "datasetcollector": 45, "default_stdout_path": 75, "develop": [126, 127, 132], "document": [22, 23, 126, 127, 128], "duplic": 131, "environ": [126, 127], "error": [126, 127], "exampl": 129, "except": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "execut": [24, 25, 131], "file": [126, 127], "find_h5_fil": 46, "format": 91, "format_env": 80, "format_walltim": 81, "from": 132, "from_config": 19, "gap": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132], "gapscollectionwarn": 121, "gapsconfigerror": 62, "gapsdeprecationwarn": 122, "gapserror": 63, "gapsexecutionerror": 64, "gapsfilenotfounderror": 65, "gapshpcerror": 66, "gapshpcwarn": 123, "gapsindexerror": 68, "gapsioerror": 67, "gapskeyerror": 69, "gapsruntimeerror": 70, "gapstypeerror": 71, "gapsvalueerror": 72, "gapswarn": 124, "gener": 131, "get": 131, "guidelin": [126, 127], "handl": [126, 127, 132], "handler": 52, "hardwareopt": 108, "hardwarestatusretriev": [86, 109], "hidden": 130, "how": [130, 131], "hpc": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], "hpcjobmanag": 76, "i": 128, "idea": 131, "import": [126, 127], "importerror": 132, "init_logg": 93, "init_logging_from_config_fil": 58, "instal": 132, "integr": 130, "intro": 130, "json5handl": 53, "jsonhandl": 54, "kei": 130, "kickoff_job": 25, "known": 131, "legaci": [84, 85, 86, 87, 88, 89], "limit": 131, "load_config": 59, "log": [90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 130], "log_mem": 94, "log_vers": 95, "main_monitor": 39, "make_cli": 9, "make_handl": 96, "make_log_file_handl": 97, "make_log_stream_handl": 98, "make_sh": 82, "miscellan": [126, 127], "model": 131, "monitor": 131, "multipl": 130, "multiprocess": 130, "node_kwarg": 20, "overview": [126, 127], "packag": 130, "paramet": 130, "parametr": 131, "parse_gids_from_fil": 47, "parse_meta": 48, "parse_previous_statu": 104, "parse_project_point": 49, "pb": 77, "pipelin": [26, 27, 28, 29, 87, 101, 102, 103, 104, 131], "pipeline_command": 28, "pipelineerror": 88, "pipelinestep": 103, "power": 131, "pre": 130, "preprocess": [30, 31, 32, 33], "preprocess_collect_config": 31, "preprocess_script_config": 32, "print_logging_info": 99, "print_logging_info_all_librari": 100, "process": [126, 127], "processor": 130, "project_point": [105, 106], "project_points_from_container_or_slic": 117, "projectpoint": 106, "pypi": 132, "python": 130, "q_column": 78, "qosopt": 110, "question": [130, 131], "recursively_update_dict": 118, "refer": 100, "reset": [34, 35, 131], "reset_command": 35, "resolve_all_path": 60, "resolve_path": 119, "ruff": [126, 127], "run": 131, "run_with_status_upd": 21, "script": [36, 37, 131], "setup": 130, "should": 128, "slurm": 79, "sourc": 132, "split": 130, "split_project_points_into_rang": 33, "standard": 131, "start": 131, "statu": [38, 39, 40, 89, 107, 108, 109, 110, 111, 112, 113, 114, 131], "status_command": 40, "statusfield": 112, "statusopt": 113, "statusupd": 114, "step": 131, "structur": [126, 127], "stylist": [126, 127], "submit": 83, "templat": [41, 42], "template_command": 42, "template_pipeline_config": 29, "test": [126, 127], "tomlhandl": 55, "topic": 130, "us": [128, 130], "util": [115, 116, 117, 118, 119], "version": 132, "warn": [120, 121, 122, 123, 124], "what": 128, "who": 128, "yamlhandl": 56, "your": 130}})